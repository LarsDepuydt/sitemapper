{"/Users/sean/Code/sitemapper/lib/tests/test.es5.js":{"path":"/Users/sean/Code/sitemapper/lib/tests/test.es5.js","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":66}},"1":{"start":{"line":1,"column":87},"end":{"line":1,"column":104}},"2":{"start":{"line":1,"column":116},"end":{"line":1,"column":157}},"3":{"start":{"line":1,"column":158},"end":{"line":1,"column":3496}},"4":{"start":{"line":1,"column":191},"end":{"line":1,"column":3493}},"5":{"start":{"line":1,"column":207},"end":{"line":1,"column":232}},"6":{"start":{"line":1,"column":274},"end":{"line":1,"column":1009}},"7":{"start":{"line":1,"column":321},"end":{"line":1,"column":368}},"8":{"start":{"line":1,"column":406},"end":{"line":1,"column":441}},"9":{"start":{"line":1,"column":479},"end":{"line":1,"column":514}},"10":{"start":{"line":1,"column":552},"end":{"line":1,"column":587}},"11":{"start":{"line":1,"column":628},"end":{"line":1,"column":715}},"12":{"start":{"line":1,"column":760},"end":{"line":1,"column":837}},"13":{"start":{"line":1,"column":869},"end":{"line":1,"column":928}},"14":{"start":{"line":1,"column":956},"end":{"line":1,"column":1007}},"15":{"start":{"line":1,"column":1071},"end":{"line":1,"column":2751}},"16":{"start":{"line":1,"column":1154},"end":{"line":1,"column":1172}},"17":{"start":{"line":1,"column":1172},"end":{"line":1,"column":1441}},"18":{"start":{"line":1,"column":1239},"end":{"line":1,"column":1393}},"19":{"start":{"line":1,"column":1406},"end":{"line":1,"column":1439}},"20":{"start":{"line":1,"column":1522},"end":{"line":1,"column":1540}},"21":{"start":{"line":1,"column":1540},"end":{"line":1,"column":1696}},"22":{"start":{"line":1,"column":1596},"end":{"line":1,"column":1648}},"23":{"start":{"line":1,"column":1661},"end":{"line":1,"column":1694}},"24":{"start":{"line":1,"column":1784},"end":{"line":1,"column":1802}},"25":{"start":{"line":1,"column":1802},"end":{"line":1,"column":2075}},"26":{"start":{"line":1,"column":1871},"end":{"line":1,"column":2027}},"27":{"start":{"line":1,"column":2040},"end":{"line":1,"column":2073}},"28":{"start":{"line":1,"column":2158},"end":{"line":1,"column":2176}},"29":{"start":{"line":1,"column":2176},"end":{"line":1,"column":2462}},"30":{"start":{"line":1,"column":2263},"end":{"line":1,"column":2414}},"31":{"start":{"line":1,"column":2427},"end":{"line":1,"column":2460}},"32":{"start":{"line":1,"column":2571},"end":{"line":1,"column":2589}},"33":{"start":{"line":1,"column":2589},"end":{"line":1,"column":2749}},"34":{"start":{"line":1,"column":2674},"end":{"line":1,"column":2701}},"35":{"start":{"line":1,"column":2714},"end":{"line":1,"column":2747}},"36":{"start":{"line":1,"column":2793},"end":{"line":1,"column":3255}},"37":{"start":{"line":1,"column":2809},"end":{"line":1,"column":2892}},"38":{"start":{"line":1,"column":2994},"end":{"line":1,"column":3012}},"39":{"start":{"line":1,"column":3012},"end":{"line":1,"column":3253}},"40":{"start":{"line":1,"column":3113},"end":{"line":1,"column":3205}},"41":{"start":{"line":1,"column":3218},"end":{"line":1,"column":3251}},"42":{"start":{"line":1,"column":3296},"end":{"line":1,"column":3491}},"43":{"start":{"line":1,"column":3353},"end":{"line":1,"column":3371}},"44":{"start":{"line":1,"column":3371},"end":{"line":1,"column":3489}},"45":{"start":{"line":1,"column":3439},"end":{"line":1,"column":3487}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":180},"end":{"line":1,"column":181}},"loc":{"start":{"line":1,"column":190},"end":{"line":1,"column":3494}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":202},"end":{"line":1,"column":203}},"loc":{"start":{"line":1,"column":206},"end":{"line":1,"column":233}},"line":1},"2":{"name":"(anonymous_2)","decl":{"start":{"line":1,"column":263},"end":{"line":1,"column":264}},"loc":{"start":{"line":1,"column":273},"end":{"line":1,"column":1010}},"line":1},"3":{"name":"(anonymous_3)","decl":{"start":{"line":1,"column":316},"end":{"line":1,"column":317}},"loc":{"start":{"line":1,"column":320},"end":{"line":1,"column":369}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":401},"end":{"line":1,"column":402}},"loc":{"start":{"line":1,"column":405},"end":{"line":1,"column":442}},"line":1},"5":{"name":"(anonymous_5)","decl":{"start":{"line":1,"column":474},"end":{"line":1,"column":475}},"loc":{"start":{"line":1,"column":478},"end":{"line":1,"column":515}},"line":1},"6":{"name":"(anonymous_6)","decl":{"start":{"line":1,"column":547},"end":{"line":1,"column":548}},"loc":{"start":{"line":1,"column":551},"end":{"line":1,"column":588}},"line":1},"7":{"name":"(anonymous_7)","decl":{"start":{"line":1,"column":623},"end":{"line":1,"column":624}},"loc":{"start":{"line":1,"column":627},"end":{"line":1,"column":716}},"line":1},"8":{"name":"(anonymous_8)","decl":{"start":{"line":1,"column":755},"end":{"line":1,"column":756}},"loc":{"start":{"line":1,"column":759},"end":{"line":1,"column":838}},"line":1},"9":{"name":"(anonymous_9)","decl":{"start":{"line":1,"column":864},"end":{"line":1,"column":865}},"loc":{"start":{"line":1,"column":868},"end":{"line":1,"column":929}},"line":1},"10":{"name":"(anonymous_10)","decl":{"start":{"line":1,"column":951},"end":{"line":1,"column":952}},"loc":{"start":{"line":1,"column":955},"end":{"line":1,"column":1008}},"line":1},"11":{"name":"(anonymous_11)","decl":{"start":{"line":1,"column":1060},"end":{"line":1,"column":1061}},"loc":{"start":{"line":1,"column":1070},"end":{"line":1,"column":2752}},"line":1},"12":{"name":"(anonymous_12)","decl":{"start":{"line":1,"column":1142},"end":{"line":1,"column":1143}},"loc":{"start":{"line":1,"column":1153},"end":{"line":1,"column":1442}},"line":1},"13":{"name":"(anonymous_13)","decl":{"start":{"line":1,"column":1235},"end":{"line":1,"column":1236}},"loc":{"start":{"line":1,"column":1238},"end":{"line":1,"column":1394}},"line":1},"14":{"name":"(anonymous_14)","decl":{"start":{"line":1,"column":1402},"end":{"line":1,"column":1403}},"loc":{"start":{"line":1,"column":1405},"end":{"line":1,"column":1440}},"line":1},"15":{"name":"(anonymous_15)","decl":{"start":{"line":1,"column":1510},"end":{"line":1,"column":1511}},"loc":{"start":{"line":1,"column":1521},"end":{"line":1,"column":1697}},"line":1},"16":{"name":"(anonymous_16)","decl":{"start":{"line":1,"column":1592},"end":{"line":1,"column":1593}},"loc":{"start":{"line":1,"column":1595},"end":{"line":1,"column":1649}},"line":1},"17":{"name":"(anonymous_17)","decl":{"start":{"line":1,"column":1657},"end":{"line":1,"column":1658}},"loc":{"start":{"line":1,"column":1660},"end":{"line":1,"column":1695}},"line":1},"18":{"name":"(anonymous_18)","decl":{"start":{"line":1,"column":1772},"end":{"line":1,"column":1773}},"loc":{"start":{"line":1,"column":1783},"end":{"line":1,"column":2076}},"line":1},"19":{"name":"(anonymous_19)","decl":{"start":{"line":1,"column":1867},"end":{"line":1,"column":1868}},"loc":{"start":{"line":1,"column":1870},"end":{"line":1,"column":2028}},"line":1},"20":{"name":"(anonymous_20)","decl":{"start":{"line":1,"column":2036},"end":{"line":1,"column":2037}},"loc":{"start":{"line":1,"column":2039},"end":{"line":1,"column":2074}},"line":1},"21":{"name":"(anonymous_21)","decl":{"start":{"line":1,"column":2146},"end":{"line":1,"column":2147}},"loc":{"start":{"line":1,"column":2157},"end":{"line":1,"column":2463}},"line":1},"22":{"name":"(anonymous_22)","decl":{"start":{"line":1,"column":2259},"end":{"line":1,"column":2260}},"loc":{"start":{"line":1,"column":2262},"end":{"line":1,"column":2415}},"line":1},"23":{"name":"(anonymous_23)","decl":{"start":{"line":1,"column":2423},"end":{"line":1,"column":2424}},"loc":{"start":{"line":1,"column":2426},"end":{"line":1,"column":2461}},"line":1},"24":{"name":"(anonymous_24)","decl":{"start":{"line":1,"column":2559},"end":{"line":1,"column":2560}},"loc":{"start":{"line":1,"column":2570},"end":{"line":1,"column":2750}},"line":1},"25":{"name":"(anonymous_25)","decl":{"start":{"line":1,"column":2670},"end":{"line":1,"column":2671}},"loc":{"start":{"line":1,"column":2673},"end":{"line":1,"column":2702}},"line":1},"26":{"name":"(anonymous_26)","decl":{"start":{"line":1,"column":2710},"end":{"line":1,"column":2711}},"loc":{"start":{"line":1,"column":2713},"end":{"line":1,"column":2748}},"line":1},"27":{"name":"(anonymous_27)","decl":{"start":{"line":1,"column":2782},"end":{"line":1,"column":2783}},"loc":{"start":{"line":1,"column":2792},"end":{"line":1,"column":3256}},"line":1},"28":{"name":"(anonymous_28)","decl":{"start":{"line":1,"column":2804},"end":{"line":1,"column":2805}},"loc":{"start":{"line":1,"column":2808},"end":{"line":1,"column":2893}},"line":1},"29":{"name":"(anonymous_29)","decl":{"start":{"line":1,"column":2982},"end":{"line":1,"column":2983}},"loc":{"start":{"line":1,"column":2993},"end":{"line":1,"column":3254}},"line":1},"30":{"name":"(anonymous_30)","decl":{"start":{"line":1,"column":3109},"end":{"line":1,"column":3110}},"loc":{"start":{"line":1,"column":3112},"end":{"line":1,"column":3206}},"line":1},"31":{"name":"(anonymous_31)","decl":{"start":{"line":1,"column":3214},"end":{"line":1,"column":3215}},"loc":{"start":{"line":1,"column":3217},"end":{"line":1,"column":3252}},"line":1},"32":{"name":"(anonymous_32)","decl":{"start":{"line":1,"column":3285},"end":{"line":1,"column":3286}},"loc":{"start":{"line":1,"column":3295},"end":{"line":1,"column":3492}},"line":1},"33":{"name":"(anonymous_33)","decl":{"start":{"line":1,"column":3341},"end":{"line":1,"column":3342}},"loc":{"start":{"line":1,"column":3352},"end":{"line":1,"column":3490}},"line":1},"34":{"name":"(anonymous_34)","decl":{"start":{"line":1,"column":3431},"end":{"line":1,"column":3432}},"loc":{"start":{"line":1,"column":3438},"end":{"line":1,"column":3488}},"line":1}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":15,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":1,"21":1,"22":1,"23":0,"24":1,"25":1,"26":1,"27":0,"28":1,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1,"35":0,"36":1,"37":1,"38":1,"39":1,"40":1,"41":0,"42":1,"43":1,"44":1,"45":1},"f":{"0":1,"1":15,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":0,"18":1,"19":1,"20":0,"21":1,"22":1,"23":0,"24":1,"25":1,"26":0,"27":1,"28":1,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1},"b":{},"inputSourceMap":{"version":3,"file":"test.es5.js","names":["require","sitemapper","isUrl","Sitemapper","describe","beforeEach","it","initializeTimeout","should","be","Function","crawl","parse","fetch","url","equal","timeout","done","then","data","sites","Array","length","above","true","catch","error","console","errors","requestHeaders","greaterThan","getSites","err"],"sources":["../../src/tests/test.es5.js"],"sourcesContent":["require('async');\nrequire('assert');\nrequire('should');\nconst isUrl = require('is-url');\n\nconst Sitemapper = require('../../lib/assets/sitemapper.js');\nvar sitemapper;\n\ndescribe('Sitemapper', function () {\n\n  beforeEach(() => {\n    sitemapper = new Sitemapper();\n  });\n\n  describe('Sitemapper Class', function () {\n\n    it('should have initializeTimeout method', () => {\n      sitemapper.initializeTimeout.should.be.Function;\n    });\n\n    it('should have crawl method', () => {\n      sitemapper.crawl.should.be.Function;\n    });\n\n    it('should have parse method', () => {\n      sitemapper.parse.should.be.Function;\n    });\n\n    it('should have fetch method', () => {\n      sitemapper.fetch.should.be.Function;\n    });\n\n    it('should construct with a url', () => {\n      sitemapper = new Sitemapper({\n        url: 'google.com',\n      });\n      sitemapper.url.should.equal('google.com');\n    });\n\n    it('should construct with a timeout', () => {\n      sitemapper = new Sitemapper({\n        timeout: 1000,\n      });\n      sitemapper.timeout.should.equal(1000);\n    });\n\n    it('should set timeout', () => {\n      sitemapper.timeout = 1000;\n      sitemapper.timeout.should.equal(1000);\n    });\n\n    it('should set url', () => {\n      sitemapper.url = 1000;\n      sitemapper.url.should.equal(1000);\n    });\n  });\n\n  describe('fetch Method resolves sites to array', function () {\n    it('https://wp.seantburke.com/sitemap.xml sitemaps should be an array', function (done) {\n      this.timeout(30000);\n      const url = 'https://wp.seantburke.com/sitemap.xml';\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.url.should.equal(url);\n          data.sites.length.should.be.above(2);\n          isUrl(data.sites[0]).should.be.true;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('gibberish.gibberish should fail silently with an empty array', function (done) {\n      this.timeout(30000);\n      const url = 'http://gibberish.gibberish';\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.google.com/work/sitemap.xml sitemaps should be an array', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.google.com/work/sitemap.xml';\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.url.should.equal(url);\n          data.sites.length.should.be.above(2);\n          isUrl(data.sites[0]).should.be.true;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.golinks.io/sitemap.xml sitemaps should be an array', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.golinks.io/sitemap.xml';\n      sitemapper.timeout = 5000;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.url.should.equal(url);\n          data.sites.length.should.be.above(2);\n          isUrl(data.sites[0]).should.be.true;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.golinks.io/sitemap.xml sitemaps should return an empty array when timing out', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.golinks.io/sitemap.xml';\n      sitemapper.timeout = 1;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n  });\n\n  describe('gzipped sitemaps', function () {\n    beforeEach(() => {\n      sitemapper = new Sitemapper({\n        requestHeaders: {\n          'Accept-Encoding': 'gzip,deflate,sdch',\n        }\n      });\n    });\n\n    it('https://www.banggood.com/sitemap/category.xml.gz gzip should be a non-empty array', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.banggood.com/sitemap/category.xml.gz';\n      sitemapper.timeout = 10000;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          data.sites.length.should.be.greaterThan(0);\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n  });\n\n  describe('getSites method', function () {\n    it('getSites should be backwards compatible', function (done) {\n      this.timeout(30000);\n      const url = 'https://wp.seantburke.com/sitemap.xml';\n      sitemapper.getSites(url, (err, sites) => {\n        sites.should.be.Array;\n        isUrl(sites[0]).should.be.true;\n        done();\n      });\n    });\n  });\n});\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dffa71f0ed7e4bedd69862d714fc9692b359107f","contentHash":"52ab6c92792c9d07dabd19de22a0c7fd44a52bcee18f5066579d5ff53558ebdc"},"/Users/sean/Code/sitemapper/lib/assets/sitemapper.js":{"path":"/Users/sean/Code/sitemapper/lib/assets/sitemapper.js","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":91}},"1":{"start":{"line":1,"column":103},"end":{"line":1,"column":120}},"2":{"start":{"line":1,"column":126},"end":{"line":1,"column":164}},"3":{"start":{"line":1,"column":171},"end":{"line":1,"column":210}},"4":{"start":{"line":1,"column":219},"end":{"line":1,"column":261}},"5":{"start":{"line":1,"column":270},"end":{"line":1,"column":312}},"6":{"start":{"line":1,"column":348},"end":{"line":1,"column":384}},"7":{"start":{"line":1,"column":428},"end":{"line":1,"column":482}},"8":{"start":{"line":1,"column":438},"end":{"line":1,"column":445}},"9":{"start":{"line":1,"column":448},"end":{"line":1,"column":455}},"10":{"start":{"line":1,"column":465},"end":{"line":1,"column":481}},"11":{"start":{"line":1,"column":482},"end":{"line":1,"column":522}},"12":{"start":{"line":1,"column":553},"end":{"line":1,"column":765}},"13":{"start":{"line":1,"column":577},"end":{"line":1,"column":581}},"14":{"start":{"line":1,"column":584},"end":{"line":1,"column":593}},"15":{"start":{"line":1,"column":594},"end":{"line":1,"column":764}},"16":{"start":{"line":1,"column":641},"end":{"line":1,"column":679}},"17":{"start":{"line":1,"column":694},"end":{"line":1,"column":733}},"18":{"start":{"line":1,"column":740},"end":{"line":1,"column":752}},"19":{"start":{"line":1,"column":753},"end":{"line":1,"column":762}},"20":{"start":{"line":1,"column":804},"end":{"line":1,"column":826}},"21":{"start":{"line":1,"column":827},"end":{"line":1,"column":1084}},"22":{"start":{"line":1,"column":1099},"end":{"line":1,"column":1108}},"23":{"start":{"line":1,"column":1111},"end":{"line":1,"column":1115}},"24":{"start":{"line":1,"column":1116},"end":{"line":1,"column":1426}},"25":{"start":{"line":1,"column":1159},"end":{"line":1,"column":1195}},"26":{"start":{"line":1,"column":1198},"end":{"line":1,"column":1225}},"27":{"start":{"line":1,"column":1226},"end":{"line":1,"column":1313}},"28":{"start":{"line":1,"column":1313},"end":{"line":1,"column":1371}},"29":{"start":{"line":1,"column":1317},"end":{"line":1,"column":1335}},"30":{"start":{"line":1,"column":1345},"end":{"line":1,"column":1370}},"31":{"start":{"line":1,"column":1371},"end":{"line":1,"column":1422}},"32":{"start":{"line":1,"column":1448},"end":{"line":1,"column":1467}},"33":{"start":{"line":1,"column":1490},"end":{"line":1,"column":1504}},"34":{"start":{"line":1,"column":1526},"end":{"line":1,"column":1545}},"35":{"start":{"line":1,"column":1568},"end":{"line":1,"column":1582}},"36":{"start":{"line":1,"column":1601},"end":{"line":1,"column":1611}},"37":{"start":{"line":1,"column":1629},"end":{"line":1,"column":1644}},"38":{"start":{"line":1,"column":1665},"end":{"line":1,"column":1677}},"39":{"start":{"line":1,"column":1697},"end":{"line":1,"column":1714}},"40":{"start":{"line":1,"column":1729},"end":{"line":1,"column":1738}},"41":{"start":{"line":1,"column":1741},"end":{"line":1,"column":1745}},"42":{"start":{"line":1,"column":1746},"end":{"line":1,"column":2556}},"43":{"start":{"line":1,"column":1789},"end":{"line":1,"column":1825}},"44":{"start":{"line":1,"column":1828},"end":{"line":1,"column":1972}},"45":{"start":{"line":1,"column":1973},"end":{"line":1,"column":2552}},"46":{"start":{"line":1,"column":1983},"end":{"line":1,"column":2004}},"47":{"start":{"line":1,"column":2005},"end":{"line":1,"column":2030}},"48":{"start":{"line":1,"column":2036},"end":{"line":1,"column":2043}},"49":{"start":{"line":1,"column":2044},"end":{"line":1,"column":2132}},"50":{"start":{"line":1,"column":2070},"end":{"line":1,"column":2132}},"51":{"start":{"line":1,"column":2138},"end":{"line":1,"column":2214}},"52":{"start":{"line":1,"column":2221},"end":{"line":1,"column":2259}},"53":{"start":{"line":1,"column":2260},"end":{"line":1,"column":2285}},"54":{"start":{"line":1,"column":2295},"end":{"line":1,"column":2551}},"55":{"start":{"line":1,"column":2580},"end":{"line":1,"column":2640}},"56":{"start":{"line":1,"column":2616},"end":{"line":1,"column":2626}},"57":{"start":{"line":1,"column":2656},"end":{"line":1,"column":2665}},"58":{"start":{"line":1,"column":2668},"end":{"line":1,"column":2672}},"59":{"start":{"line":1,"column":2673},"end":{"line":1,"column":4331}},"60":{"start":{"line":1,"column":2716},"end":{"line":1,"column":2748}},"61":{"start":{"line":1,"column":2749},"end":{"line":1,"column":4327}},"62":{"start":{"line":1,"column":2773},"end":{"line":1,"column":2789}},"63":{"start":{"line":1,"column":2790},"end":{"line":1,"column":3164}},"64":{"start":{"line":1,"column":2827},"end":{"line":1,"column":3164}},"65":{"start":{"line":1,"column":3164},"end":{"line":1,"column":3465}},"66":{"start":{"line":1,"column":3194},"end":{"line":1,"column":3267}},"67":{"start":{"line":1,"column":3273},"end":{"line":1,"column":3438}},"68":{"start":{"line":1,"column":3297},"end":{"line":1,"column":3323}},"69":{"start":{"line":1,"column":3314},"end":{"line":1,"column":3323}},"70":{"start":{"line":1,"column":3323},"end":{"line":1,"column":3354}},"71":{"start":{"line":1,"column":3345},"end":{"line":1,"column":3354}},"72":{"start":{"line":1,"column":3360},"end":{"line":1,"column":3392}},"73":{"start":{"line":1,"column":3393},"end":{"line":1,"column":3412}},"74":{"start":{"line":1,"column":3422},"end":{"line":1,"column":3437}},"75":{"start":{"line":1,"column":3439},"end":{"line":1,"column":3464}},"76":{"start":{"line":1,"column":3465},"end":{"line":1,"column":3917}},"77":{"start":{"line":1,"column":3487},"end":{"line":1,"column":3572}},"78":{"start":{"line":1,"column":3578},"end":{"line":1,"column":3624}},"79":{"start":{"line":1,"column":3608},"end":{"line":1,"column":3623}},"80":{"start":{"line":1,"column":3627},"end":{"line":1,"column":3661}},"81":{"start":{"line":1,"column":3664},"end":{"line":1,"column":3691}},"82":{"start":{"line":1,"column":3673},"end":{"line":1,"column":3690}},"83":{"start":{"line":1,"column":3679},"end":{"line":1,"column":3689}},"84":{"start":{"line":1,"column":3694},"end":{"line":1,"column":3714}},"85":{"start":{"line":1,"column":3717},"end":{"line":1,"column":3802}},"86":{"start":{"line":1,"column":3729},"end":{"line":1,"column":3748}},"87":{"start":{"line":1,"column":3778},"end":{"line":1,"column":3779}},"88":{"start":{"line":1,"column":3780},"end":{"line":1,"column":3797}},"89":{"start":{"line":1,"column":3805},"end":{"line":1,"column":3891}},"90":{"start":{"line":1,"column":3817},"end":{"line":1,"column":3836}},"91":{"start":{"line":1,"column":3867},"end":{"line":1,"column":3868}},"92":{"start":{"line":1,"column":3869},"end":{"line":1,"column":3886}},"93":{"start":{"line":1,"column":3892},"end":{"line":1,"column":3916}},"94":{"start":{"line":1,"column":3917},"end":{"line":1,"column":4282}},"95":{"start":{"line":1,"column":4292},"end":{"line":1,"column":4326}},"96":{"start":{"line":1,"column":4349},"end":{"line":1,"column":4358}},"97":{"start":{"line":1,"column":4361},"end":{"line":1,"column":4365}},"98":{"start":{"line":1,"column":4366},"end":{"line":1,"column":4656}},"99":{"start":{"line":1,"column":4409},"end":{"line":1,"column":4445}},"100":{"start":{"line":1,"column":4448},"end":{"line":1,"column":4470}},"101":{"start":{"line":1,"column":4471},"end":{"line":1,"column":4575}},"102":{"start":{"line":1,"column":4581},"end":{"line":1,"column":4583}},"103":{"start":{"line":1,"column":4586},"end":{"line":1,"column":4588}},"104":{"start":{"line":1,"column":4589},"end":{"line":1,"column":4639}},"105":{"start":{"line":1,"column":4599},"end":{"line":1,"column":4615}},"106":{"start":{"line":1,"column":4616},"end":{"line":1,"column":4625}},"107":{"start":{"line":1,"column":4635},"end":{"line":1,"column":4638}},"108":{"start":{"line":1,"column":4639},"end":{"line":1,"column":4652}},"109":{"start":{"line":1,"column":4683},"end":{"line":1,"column":4777}},"110":{"start":{"line":1,"column":4716},"end":{"line":1,"column":4730}},"111":{"start":{"line":1,"column":4731},"end":{"line":1,"column":4775}},"112":{"start":{"line":1,"column":4762},"end":{"line":1,"column":4773}},"113":{"start":{"line":1,"column":4779},"end":{"line":1,"column":4876}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":1,"column":322},"end":{"line":1,"column":344}},"loc":{"start":{"line":1,"column":347},"end":{"line":1,"column":385}},"line":1},"1":{"name":"asyncGeneratorStep","decl":{"start":{"line":1,"column":394},"end":{"line":1,"column":412}},"loc":{"start":{"line":1,"column":427},"end":{"line":1,"column":523}},"line":1},"2":{"name":"_asyncToGenerator","decl":{"start":{"line":1,"column":532},"end":{"line":1,"column":549}},"loc":{"start":{"line":1,"column":552},"end":{"line":1,"column":766}},"line":1},"3":{"name":"(anonymous_3)","decl":{"start":{"line":1,"column":560},"end":{"line":1,"column":561}},"loc":{"start":{"line":1,"column":570},"end":{"line":1,"column":765}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":613},"end":{"line":1,"column":614}},"loc":{"start":{"line":1,"column":626},"end":{"line":1,"column":763}},"line":1},"5":{"name":"f","decl":{"start":{"line":1,"column":636},"end":{"line":1,"column":637}},"loc":{"start":{"line":1,"column":640},"end":{"line":1,"column":680}},"line":1},"6":{"name":"g","decl":{"start":{"line":1,"column":689},"end":{"line":1,"column":690}},"loc":{"start":{"line":1,"column":693},"end":{"line":1,"column":734}},"line":1},"7":{"name":"(anonymous_7)","decl":{"start":{"line":1,"column":783},"end":{"line":1,"column":784}},"loc":{"start":{"line":1,"column":797},"end":{"line":1,"column":1085}},"line":1},"8":{"name":"(anonymous_8)","decl":{"start":{"line":1,"column":1085},"end":{"line":1,"column":1086}},"loc":{"start":{"line":1,"column":1092},"end":{"line":1,"column":1427}},"line":1},"9":{"name":"(anonymous_9)","decl":{"start":{"line":1,"column":1141},"end":{"line":1,"column":1142}},"loc":{"start":{"line":1,"column":1152},"end":{"line":1,"column":1423}},"line":1},"10":{"name":"(anonymous_10)","decl":{"start":{"line":1,"column":1427},"end":{"line":1,"column":1428}},"loc":{"start":{"line":1,"column":1447},"end":{"line":1,"column":1468}},"line":1},"11":{"name":"(anonymous_11)","decl":{"start":{"line":1,"column":1468},"end":{"line":1,"column":1469}},"loc":{"start":{"line":1,"column":1489},"end":{"line":1,"column":1505}},"line":1},"12":{"name":"(anonymous_12)","decl":{"start":{"line":1,"column":1505},"end":{"line":1,"column":1506}},"loc":{"start":{"line":1,"column":1525},"end":{"line":1,"column":1546}},"line":1},"13":{"name":"(anonymous_13)","decl":{"start":{"line":1,"column":1546},"end":{"line":1,"column":1547}},"loc":{"start":{"line":1,"column":1567},"end":{"line":1,"column":1583}},"line":1},"14":{"name":"(anonymous_14)","decl":{"start":{"line":1,"column":1583},"end":{"line":1,"column":1584}},"loc":{"start":{"line":1,"column":1600},"end":{"line":1,"column":1612}},"line":1},"15":{"name":"(anonymous_15)","decl":{"start":{"line":1,"column":1612},"end":{"line":1,"column":1613}},"loc":{"start":{"line":1,"column":1628},"end":{"line":1,"column":1645}},"line":1},"16":{"name":"(anonymous_16)","decl":{"start":{"line":1,"column":1645},"end":{"line":1,"column":1646}},"loc":{"start":{"line":1,"column":1664},"end":{"line":1,"column":1678}},"line":1},"17":{"name":"(anonymous_17)","decl":{"start":{"line":1,"column":1678},"end":{"line":1,"column":1679}},"loc":{"start":{"line":1,"column":1696},"end":{"line":1,"column":1715}},"line":1},"18":{"name":"(anonymous_18)","decl":{"start":{"line":1,"column":1715},"end":{"line":1,"column":1716}},"loc":{"start":{"line":1,"column":1722},"end":{"line":1,"column":2557}},"line":1},"19":{"name":"(anonymous_19)","decl":{"start":{"line":1,"column":1771},"end":{"line":1,"column":1772}},"loc":{"start":{"line":1,"column":1782},"end":{"line":1,"column":2553}},"line":1},"20":{"name":"(anonymous_20)","decl":{"start":{"line":1,"column":2557},"end":{"line":1,"column":2558}},"loc":{"start":{"line":1,"column":2579},"end":{"line":1,"column":2641}},"line":1},"21":{"name":"(anonymous_21)","decl":{"start":{"line":1,"column":2612},"end":{"line":1,"column":2613}},"loc":{"start":{"line":1,"column":2616},"end":{"line":1,"column":2626}},"line":1},"22":{"name":"(anonymous_22)","decl":{"start":{"line":1,"column":2641},"end":{"line":1,"column":2642}},"loc":{"start":{"line":1,"column":2649},"end":{"line":1,"column":4332}},"line":1},"23":{"name":"(anonymous_23)","decl":{"start":{"line":1,"column":2698},"end":{"line":1,"column":2699}},"loc":{"start":{"line":1,"column":2709},"end":{"line":1,"column":4328}},"line":1},"24":{"name":"(anonymous_24)","decl":{"start":{"line":1,"column":3293},"end":{"line":1,"column":3294}},"loc":{"start":{"line":1,"column":3296},"end":{"line":1,"column":3413}},"line":1},"25":{"name":"(anonymous_25)","decl":{"start":{"line":1,"column":3419},"end":{"line":1,"column":3420}},"loc":{"start":{"line":1,"column":3422},"end":{"line":1,"column":3437}},"line":1},"26":{"name":"(anonymous_26)","decl":{"start":{"line":1,"column":3605},"end":{"line":1,"column":3606}},"loc":{"start":{"line":1,"column":3608},"end":{"line":1,"column":3623}},"line":1},"27":{"name":"(anonymous_27)","decl":{"start":{"line":1,"column":3670},"end":{"line":1,"column":3671}},"loc":{"start":{"line":1,"column":3673},"end":{"line":1,"column":3690}},"line":1},"28":{"name":"(anonymous_28)","decl":{"start":{"line":1,"column":3675},"end":{"line":1,"column":3676}},"loc":{"start":{"line":1,"column":3679},"end":{"line":1,"column":3689}},"line":1},"29":{"name":"(anonymous_29)","decl":{"start":{"line":1,"column":3726},"end":{"line":1,"column":3727}},"loc":{"start":{"line":1,"column":3729},"end":{"line":1,"column":3748}},"line":1},"30":{"name":"(anonymous_30)","decl":{"start":{"line":1,"column":3757},"end":{"line":1,"column":3758}},"loc":{"start":{"line":1,"column":3764},"end":{"line":1,"column":3798}},"line":1},"31":{"name":"(anonymous_31)","decl":{"start":{"line":1,"column":3814},"end":{"line":1,"column":3815}},"loc":{"start":{"line":1,"column":3817},"end":{"line":1,"column":3836}},"line":1},"32":{"name":"(anonymous_32)","decl":{"start":{"line":1,"column":3845},"end":{"line":1,"column":3846}},"loc":{"start":{"line":1,"column":3852},"end":{"line":1,"column":3887}},"line":1},"33":{"name":"(anonymous_33)","decl":{"start":{"line":1,"column":4332},"end":{"line":1,"column":4333}},"loc":{"start":{"line":1,"column":4342},"end":{"line":1,"column":4657}},"line":1},"34":{"name":"(anonymous_34)","decl":{"start":{"line":1,"column":4391},"end":{"line":1,"column":4392}},"loc":{"start":{"line":1,"column":4402},"end":{"line":1,"column":4653}},"line":1},"35":{"name":"(anonymous_35)","decl":{"start":{"line":1,"column":4657},"end":{"line":1,"column":4658}},"loc":{"start":{"line":1,"column":4682},"end":{"line":1,"column":4778}},"line":1},"36":{"name":"(anonymous_36)","decl":{"start":{"line":1,"column":4702},"end":{"line":1,"column":4703}},"loc":{"start":{"line":1,"column":4709},"end":{"line":1,"column":4776}},"line":1},"37":{"name":"(anonymous_37)","decl":{"start":{"line":1,"column":4754},"end":{"line":1,"column":4755}},"loc":{"start":{"line":1,"column":4761},"end":{"line":1,"column":4774}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":1,"column":355},"end":{"line":1,"column":384}},"type":"cond-expr","locations":[{"start":{"line":1,"column":371},"end":{"line":1,"column":372}},{"start":{"line":1,"column":373},"end":{"line":1,"column":384}}],"line":1},"1":{"loc":{"start":{"line":1,"column":355},"end":{"line":1,"column":370}},"type":"binary-expr","locations":[{"start":{"line":1,"column":355},"end":{"line":1,"column":356}},{"start":{"line":1,"column":358},"end":{"line":1,"column":370}}],"line":1},"2":{"loc":{"start":{"line":1,"column":482},"end":{"line":1,"column":522}},"type":"cond-expr","locations":[{"start":{"line":1,"column":489},"end":{"line":1,"column":493}},{"start":{"line":1,"column":494},"end":{"line":1,"column":522}}],"line":1},"3":{"loc":{"start":{"line":1,"column":804},"end":{"line":1,"column":826}},"type":"binary-expr","locations":[{"start":{"line":1,"column":804},"end":{"line":1,"column":805}},{"start":{"line":1,"column":807},"end":{"line":1,"column":826}}],"line":1},"4":{"loc":{"start":{"line":1,"column":855},"end":{"line":1,"column":870}},"type":"binary-expr","locations":[{"start":{"line":1,"column":855},"end":{"line":1,"column":864}},{"start":{"line":1,"column":866},"end":{"line":1,"column":870}}],"line":1},"5":{"loc":{"start":{"line":1,"column":905},"end":{"line":1,"column":917}},"type":"binary-expr","locations":[{"start":{"line":1,"column":905},"end":{"line":1,"column":914}},{"start":{"line":1,"column":916},"end":{"line":1,"column":917}}],"line":1},"6":{"loc":{"start":{"line":1,"column":991},"end":{"line":1,"column":1008}},"type":"binary-expr","locations":[{"start":{"line":1,"column":991},"end":{"line":1,"column":1004}},{"start":{"line":1,"column":1006},"end":{"line":1,"column":1008}}],"line":1},"7":{"loc":{"start":{"line":1,"column":1022},"end":{"line":1,"column":1034}},"type":"binary-expr","locations":[{"start":{"line":1,"column":1022},"end":{"line":1,"column":1031}},{"start":{"line":1,"column":1033},"end":{"line":1,"column":1034}}],"line":1},"8":{"loc":{"start":{"line":1,"column":1159},"end":{"line":1,"column":1195}},"type":"cond-expr","locations":[{"start":{"line":1,"column":1185},"end":{"line":1,"column":1189}},{"start":{"line":1,"column":1190},"end":{"line":1,"column":1195}}],"line":1},"9":{"loc":{"start":{"line":1,"column":1159},"end":{"line":1,"column":1184}},"type":"binary-expr","locations":[{"start":{"line":1,"column":1159},"end":{"line":1,"column":1169}},{"start":{"line":1,"column":1171},"end":{"line":1,"column":1184}}],"line":1},"10":{"loc":{"start":{"line":1,"column":1226},"end":{"line":1,"column":1312}},"type":"binary-expr","locations":[{"start":{"line":1,"column":1226},"end":{"line":1,"column":1233}},{"start":{"line":1,"column":1235},"end":{"line":1,"column":1244}},{"start":{"line":1,"column":1246},"end":{"line":1,"column":1312}}],"line":1},"11":{"loc":{"start":{"line":1,"column":1345},"end":{"line":1,"column":1370}},"type":"binary-expr","locations":[{"start":{"line":1,"column":1345},"end":{"line":1,"column":1352}},{"start":{"line":1,"column":1354},"end":{"line":1,"column":1370}}],"line":1},"12":{"loc":{"start":{"line":1,"column":1390},"end":{"line":1,"column":1401}},"type":"binary-expr","locations":[{"start":{"line":1,"column":1390},"end":{"line":1,"column":1397}},{"start":{"line":1,"column":1399},"end":{"line":1,"column":1401}}],"line":1},"13":{"loc":{"start":{"line":1,"column":1409},"end":{"line":1,"column":1421}},"type":"binary-expr","locations":[{"start":{"line":1,"column":1409},"end":{"line":1,"column":1417}},{"start":{"line":1,"column":1419},"end":{"line":1,"column":1421}}],"line":1},"14":{"loc":{"start":{"line":1,"column":1789},"end":{"line":1,"column":1825}},"type":"cond-expr","locations":[{"start":{"line":1,"column":1815},"end":{"line":1,"column":1819}},{"start":{"line":1,"column":1820},"end":{"line":1,"column":1825}}],"line":1},"15":{"loc":{"start":{"line":1,"column":1789},"end":{"line":1,"column":1814}},"type":"binary-expr","locations":[{"start":{"line":1,"column":1789},"end":{"line":1,"column":1799}},{"start":{"line":1,"column":1801},"end":{"line":1,"column":1814}}],"line":1},"16":{"loc":{"start":{"line":1,"column":2044},"end":{"line":1,"column":2132}},"type":"if","locations":[{"start":{"line":1,"column":2044},"end":{"line":1,"column":2132}},{"start":{"line":1,"column":2044},"end":{"line":1,"column":2132}}],"line":1},"17":{"loc":{"start":{"line":1,"column":2047},"end":{"line":1,"column":2069}},"type":"binary-expr","locations":[{"start":{"line":1,"column":2047},"end":{"line":1,"column":2049}},{"start":{"line":1,"column":2051},"end":{"line":1,"column":2069}}],"line":1},"18":{"loc":{"start":{"line":1,"column":2138},"end":{"line":1,"column":2214}},"type":"cond-expr","locations":[{"start":{"line":1,"column":2169},"end":{"line":1,"column":2207}},{"start":{"line":1,"column":2208},"end":{"line":1,"column":2214}}],"line":1},"19":{"loc":{"start":{"line":1,"column":2301},"end":{"line":1,"column":2551}},"type":"cond-expr","locations":[{"start":{"line":1,"column":2324},"end":{"line":1,"column":2424}},{"start":{"line":1,"column":2425},"end":{"line":1,"column":2551}}],"line":1},"20":{"loc":{"start":{"line":1,"column":2425},"end":{"line":1,"column":2551}},"type":"cond-expr","locations":[{"start":{"line":1,"column":2446},"end":{"line":1,"column":2502}},{"start":{"line":1,"column":2503},"end":{"line":1,"column":2551}}],"line":1},"21":{"loc":{"start":{"line":1,"column":2716},"end":{"line":1,"column":2748}},"type":"cond-expr","locations":[{"start":{"line":1,"column":2742},"end":{"line":1,"column":2746}},{"start":{"line":1,"column":2747},"end":{"line":1,"column":2748}}],"line":1},"22":{"loc":{"start":{"line":1,"column":2716},"end":{"line":1,"column":2741}},"type":"binary-expr","locations":[{"start":{"line":1,"column":2716},"end":{"line":1,"column":2726}},{"start":{"line":1,"column":2728},"end":{"line":1,"column":2741}}],"line":1},"23":{"loc":{"start":{"line":1,"column":2790},"end":{"line":1,"column":3164}},"type":"if","locations":[{"start":{"line":1,"column":2790},"end":{"line":1,"column":3164}},{"start":{"line":1,"column":2790},"end":{"line":1,"column":3164}}],"line":1},"24":{"loc":{"start":{"line":1,"column":2834},"end":{"line":1,"column":3163}},"type":"cond-expr","locations":[{"start":{"line":1,"column":2847},"end":{"line":1,"column":3002}},{"start":{"line":1,"column":3005},"end":{"line":1,"column":3162}}],"line":1},"25":{"loc":{"start":{"line":1,"column":2847},"end":{"line":1,"column":2987}},"type":"binary-expr","locations":[{"start":{"line":1,"column":2847},"end":{"line":1,"column":2854}},{"start":{"line":1,"column":2856},"end":{"line":1,"column":2987}}],"line":1},"26":{"loc":{"start":{"line":1,"column":3005},"end":{"line":1,"column":3102}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3005},"end":{"line":1,"column":3012}},{"start":{"line":1,"column":3014},"end":{"line":1,"column":3102}}],"line":1},"27":{"loc":{"start":{"line":1,"column":3164},"end":{"line":1,"column":3465}},"type":"if","locations":[{"start":{"line":1,"column":3164},"end":{"line":1,"column":3465}},{"start":{"line":1,"column":3164},"end":{"line":1,"column":3465}}],"line":1},"28":{"loc":{"start":{"line":1,"column":3167},"end":{"line":1,"column":3192}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3167},"end":{"line":1,"column":3168}},{"start":{"line":1,"column":3170},"end":{"line":1,"column":3178}},{"start":{"line":1,"column":3180},"end":{"line":1,"column":3192}}],"line":1},"29":{"loc":{"start":{"line":1,"column":3194},"end":{"line":1,"column":3266}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3194},"end":{"line":1,"column":3201}},{"start":{"line":1,"column":3203},"end":{"line":1,"column":3266}}],"line":1},"30":{"loc":{"start":{"line":1,"column":3297},"end":{"line":1,"column":3323}},"type":"if","locations":[{"start":{"line":1,"column":3297},"end":{"line":1,"column":3323}},{"start":{"line":1,"column":3297},"end":{"line":1,"column":3323}}],"line":1},"31":{"loc":{"start":{"line":1,"column":3323},"end":{"line":1,"column":3354}},"type":"if","locations":[{"start":{"line":1,"column":3323},"end":{"line":1,"column":3354}},{"start":{"line":1,"column":3323},"end":{"line":1,"column":3354}}],"line":1},"32":{"loc":{"start":{"line":1,"column":3422},"end":{"line":1,"column":3437}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3422},"end":{"line":1,"column":3427}},{"start":{"line":1,"column":3429},"end":{"line":1,"column":3437}}],"line":1},"33":{"loc":{"start":{"line":1,"column":3465},"end":{"line":1,"column":3917}},"type":"if","locations":[{"start":{"line":1,"column":3465},"end":{"line":1,"column":3917}},{"start":{"line":1,"column":3465},"end":{"line":1,"column":3917}}],"line":1},"34":{"loc":{"start":{"line":1,"column":3468},"end":{"line":1,"column":3485}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3468},"end":{"line":1,"column":3469}},{"start":{"line":1,"column":3471},"end":{"line":1,"column":3485}}],"line":1},"35":{"loc":{"start":{"line":1,"column":3487},"end":{"line":1,"column":3571}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3487},"end":{"line":1,"column":3494}},{"start":{"line":1,"column":3496},"end":{"line":1,"column":3571}}],"line":1},"36":{"loc":{"start":{"line":1,"column":3608},"end":{"line":1,"column":3623}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3608},"end":{"line":1,"column":3613}},{"start":{"line":1,"column":3615},"end":{"line":1,"column":3623}}],"line":1},"37":{"loc":{"start":{"line":1,"column":3924},"end":{"line":1,"column":4282}},"type":"cond-expr","locations":[{"start":{"line":1,"column":3937},"end":{"line":1,"column":4092}},{"start":{"line":1,"column":4095},"end":{"line":1,"column":4281}}],"line":1},"38":{"loc":{"start":{"line":1,"column":3937},"end":{"line":1,"column":4077}},"type":"binary-expr","locations":[{"start":{"line":1,"column":3937},"end":{"line":1,"column":3944}},{"start":{"line":1,"column":3946},"end":{"line":1,"column":4077}}],"line":1},"39":{"loc":{"start":{"line":1,"column":4095},"end":{"line":1,"column":4173}},"type":"binary-expr","locations":[{"start":{"line":1,"column":4095},"end":{"line":1,"column":4102}},{"start":{"line":1,"column":4104},"end":{"line":1,"column":4173}}],"line":1},"40":{"loc":{"start":{"line":1,"column":4204},"end":{"line":1,"column":4231}},"type":"binary-expr","locations":[{"start":{"line":1,"column":4204},"end":{"line":1,"column":4210}},{"start":{"line":1,"column":4212},"end":{"line":1,"column":4231}}],"line":1},"41":{"loc":{"start":{"line":1,"column":4292},"end":{"line":1,"column":4326}},"type":"binary-expr","locations":[{"start":{"line":1,"column":4292},"end":{"line":1,"column":4299}},{"start":{"line":1,"column":4301},"end":{"line":1,"column":4308}},{"start":{"line":1,"column":4310},"end":{"line":1,"column":4326}}],"line":1},"42":{"loc":{"start":{"line":1,"column":4409},"end":{"line":1,"column":4445}},"type":"cond-expr","locations":[{"start":{"line":1,"column":4435},"end":{"line":1,"column":4439}},{"start":{"line":1,"column":4440},"end":{"line":1,"column":4445}}],"line":1},"43":{"loc":{"start":{"line":1,"column":4409},"end":{"line":1,"column":4434}},"type":"binary-expr","locations":[{"start":{"line":1,"column":4409},"end":{"line":1,"column":4419}},{"start":{"line":1,"column":4421},"end":{"line":1,"column":4434}}],"line":1},"44":{"loc":{"start":{"line":1,"column":4448},"end":{"line":1,"column":4470}},"type":"cond-expr","locations":[{"start":{"line":1,"column":4459},"end":{"line":1,"column":4463}},{"start":{"line":1,"column":4464},"end":{"line":1,"column":4470}}],"line":1},"45":{"loc":{"start":{"line":1,"column":4762},"end":{"line":1,"column":4773}},"type":"cond-expr","locations":[{"start":{"line":1,"column":4764},"end":{"line":1,"column":4768}},{"start":{"line":1,"column":4769},"end":{"line":1,"column":4773}}],"line":1}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":294,"8":294,"9":294,"10":0,"11":294,"12":122,"13":122,"14":122,"15":122,"16":286,"17":8,"18":122,"19":122,"20":60,"21":60,"22":25,"23":25,"24":25,"25":25,"26":25,"27":25,"28":25,"29":25,"30":0,"31":25,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":47,"41":47,"42":47,"43":47,"44":47,"45":47,"46":47,"47":47,"48":47,"49":39,"50":0,"51":39,"52":39,"53":39,"54":8,"55":47,"56":3,"57":47,"58":47,"59":47,"60":47,"61":47,"62":47,"63":47,"64":8,"65":39,"66":32,"67":32,"68":16983,"69":16983,"70":0,"71":0,"72":0,"73":0,"74":16983,"75":32,"76":7,"77":7,"78":7,"79":22,"80":7,"81":7,"82":22,"83":22,"84":7,"85":7,"86":22,"87":22,"88":22,"89":7,"90":22,"91":0,"92":0,"93":7,"94":0,"95":0,"96":3,"97":3,"98":3,"99":3,"100":3,"101":3,"102":3,"103":3,"104":3,"105":3,"106":3,"107":0,"108":3,"109":4,"110":4,"111":4,"112":4,"113":1},"f":{"0":4,"1":294,"2":122,"3":122,"4":122,"5":286,"6":8,"7":60,"8":25,"9":25,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":47,"19":47,"20":47,"21":3,"22":47,"23":47,"24":16983,"25":16983,"26":22,"27":22,"28":22,"29":22,"30":22,"31":22,"32":0,"33":3,"34":3,"35":4,"36":4,"37":4},"b":{"0":[1,3],"1":[4,4],"2":[122,172],"3":[60,49],"4":[60,57],"5":[60,60],"6":[60,60],"7":[60,60],"8":[25,0],"9":[25,25],"10":[25,1,0],"11":[0,0],"12":[25,0],"13":[25,0],"14":[47,0],"15":[47,47],"16":[0,39],"17":[39,39],"18":[4,35],"19":[3,5],"20":[1,4],"21":[0,47],"22":[47,0],"23":[8,39],"24":[0,8],"25":[0,0],"26":[8,1],"27":[32,7],"28":[39,39,32],"29":[32,0],"30":[16983,0],"31":[0,0],"32":[16983,16983],"33":[7,0],"34":[7,7],"35":[7,0],"36":[22,22],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[3,0],"43":[3,3],"44":[3,0],"45":[0,4]},"inputSourceMap":{"version":3,"file":"sitemapper.js","names":["Sitemapper","constructor","options","settings","requestHeaders","url","timeout","timeoutTable","lastmod","debug","concurrency","retries","rejectUnauthorized","fetch","results","sites","errors","console","crawl","e","error","duration","timestamp","option","parse","requestOptions","method","resolveWithFullResponse","gzip","responseType","headers","https","requester","got","get","initializeTimeout","response","statusCode","clearTimeout","data","responseBody","isGzip","rawBody","decompressResponseBody","body","parseStringPromise","name","message","setTimeout","cancel","retryIndex","log","type","urlset","filter","site","modified","Date","getTime","map","loc","sitemapindex","sitemap","limit","pLimit","promiseArray","Promise","all","result","length","reduce","prev","getSites","callback","warn","err","resolve","reject","buffer","Buffer","from","zlib","gunzip"],"sources":["../../src/assets/sitemapper.js"],"sourcesContent":["/**\n * Sitemap Parser\n *\n * Copyright (c) 2020 Sean Thomas Burke\n * Licensed under the MIT license.\n * @author Sean Burke <@seantomburke>\n */\n\nimport { parseStringPromise } from \"xml2js\";\nimport got from \"got\";\nimport zlib from \"zlib\";\nimport pLimit from \"p-limit\";\nimport isGzip from \"is-gzip\";\n\n/**\n * @typedef {Object} Sitemapper\n */\nexport default class Sitemapper {\n  /**\n   * Construct the Sitemapper class\n   *\n   * @params {Object} options to set\n   * @params {string} [options.url] - the Sitemap url (e.g https://wp.seantburke.com/sitemap.xml)\n   * @params {Timeout} [options.timeout] - @see {timeout}\n   * @params {boolean} [options.debug] - Enables/Disables additional logging\n   * @params {integer} [options.concurrency] - The number of concurrent sitemaps to crawl (e.g. 2 will crawl no more than 2 sitemaps at the same time)\n   * @params {integer} [options.retries] - The maximum number of retries to attempt when crawling fails (e.g. 1 for 1 retry, 2 attempts in total)\n   * @params {boolean} [options.rejectUnauthorized] - If true (default), it will throw on invalid certificates, such as expired or self-signed ones.\n   * @params {lastmod} [options.lastmod] - the minimum lastmod value for urls\n   *\n   * @example let sitemap = new Sitemapper({\n   *   url: 'https://wp.seantburke.com/sitemap.xml',\n   *   timeout: 15000,\n   *   lastmod: 1630693759\n   *  });\n   */\n  constructor(options) {\n    const settings = options || { requestHeaders: {} };\n    this.url = settings.url;\n    this.timeout = settings.timeout || 15000;\n    this.timeoutTable = {};\n    this.lastmod = settings.lastmod || 0;\n    this.requestHeaders = settings.requestHeaders;\n    this.debug = settings.debug;\n    this.concurrency = settings.concurrency || 10;\n    this.retries = settings.retries || 0;\n    this.rejectUnauthorized =\n      settings.rejectUnauthorized === false ? false : true;\n  }\n\n  /**\n   * Gets the sites from a sitemap.xml with a given URL\n   *\n   * @public\n   * @param {string} [url] - the Sitemaps url (e.g https://wp.seantburke.com/sitemap.xml)\n   * @returns {Promise<SitesData>}\n   * @example sitemapper.fetch('example.xml')\n   *  .then((sites) => console.log(sites));\n   */\n  async fetch(url = this.url) {\n    // initialize empty variables\n    let results = {\n      url: \"\",\n      sites: [],\n      errors: [],\n    };\n\n    // attempt to set the variables with the crawl\n    if (this.debug) {\n      // only show if it's set\n      if (this.lastmod) {\n        console.debug(`Using minimum lastmod value of ${this.lastmod}`);\n      }\n    }\n\n    try {\n      // crawl the URL\n      results = await this.crawl(url);\n    } catch (e) {\n      // show errors that may occur\n      if (this.debug) {\n        console.error(e);\n      }\n    }\n\n    return {\n      url,\n      sites: results.sites || [],\n      errors: results.errors || [],\n    };\n  }\n  /**\n   * Get the timeout\n   *\n   * @example console.log(sitemapper.timeout);\n   * @returns {Timeout}\n   */\n  static get timeout() {\n    return this.timeout;\n  }\n\n  /**\n   * Set the timeout\n   *\n   * @public\n   * @param {Timeout} duration\n   * @example sitemapper.timeout = 15000; // 15 seconds\n   */\n  static set timeout(duration) {\n    this.timeout = duration;\n  }\n\n  /**\n   * Get the lastmod minimum value\n   *\n   * @example console.log(sitemapper.lastmod);\n   * @returns {Number}\n   */\n  static get lastmod() {\n    return this.lastmod;\n  }\n\n  /**\n   * Set the lastmod minimum value\n   *\n   * @public\n   * @param {Number} timestamp\n   * @example sitemapper.lastmod = 1630694181; // Unix timestamp\n   */\n  static set lastmod(timestamp) {\n    this.lastmod = timestamp;\n  }\n\n  /**\n   *\n   * @param {string} url - url for making requests. Should be a link to a sitemaps.xml\n   * @example sitemapper.url = 'https://wp.seantburke.com/sitemap.xml'\n   */\n  static set url(url) {\n    this.url = url;\n  }\n\n  /**\n   * Get the url to parse\n   * @returns {string}\n   * @example console.log(sitemapper.url)\n   */\n  static get url() {\n    return this.url;\n  }\n\n  /**\n   * Setter for the debug state\n   * @param {Boolean} option - set whether to show debug logs in output.\n   * @example sitemapper.debug = true;\n   */\n  static set debug(option) {\n    this.debug = option;\n  }\n\n  /**\n   * Getter for the debug state\n   * @returns {Boolean}\n   * @example console.log(sitemapper.debug)\n   */\n  static get debug() {\n    return this.debug;\n  }\n\n  /**\n   * Requests the URL and uses parseStringPromise to parse through and find the data\n   *\n   * @private\n   * @param {string} [url] - the Sitemaps url (e.g https://wp.seantburke.com/sitemap.xml)\n   * @returns {Promise<ParseData>}\n   */\n  async parse(url = this.url) {\n    // setup the response options for the got request\n    const requestOptions = {\n      method: \"GET\",\n      resolveWithFullResponse: true,\n      gzip: true,\n      responseType: \"buffer\",\n      headers: this.requestHeaders,\n      https: {\n        rejectUnauthorized: this.rejectUnauthorized,\n      },\n    };\n\n    try {\n      // create a request Promise with the url and request options\n      const requester = got.get(url, requestOptions);\n\n      // initialize the timeout method based on the URL, and pass the request object.\n      this.initializeTimeout(url, requester);\n\n      // get the response from the requester promise\n      const response = await requester;\n\n      // if the response does not have a successful status code then clear the timeout for this url.\n      if (!response || response.statusCode !== 200) {\n        clearTimeout(this.timeoutTable[url]);\n        return { error: response.error, data: response };\n      }\n\n      let responseBody;\n\n      if (isGzip(response.rawBody)) {\n        responseBody = await this.decompressResponseBody(response.body);\n      } else {\n        responseBody = response.body;\n      }\n\n      // otherwise parse the XML that was returned.\n      const data = await parseStringPromise(responseBody);\n\n      // return the results\n      return { error: null, data };\n    } catch (error) {\n      // If the request was canceled notify the user of the timeout\n      if (error.name === \"CancelError\") {\n        return {\n          error: `Request timed out after ${this.timeout} milliseconds for url: '${url}'`,\n          data: error,\n        };\n      }\n\n      // If an HTTPError include error http code\n      if (error.name === \"HTTPError\") {\n        return {\n          error: `HTTP Error occurred: ${error.message}`,\n          data: error,\n        };\n      }\n\n      // Otherwise notify of another error\n      return {\n        error: `Error occurred: ${error.name}`,\n        data: error,\n      };\n    }\n  }\n\n  /**\n   * Timeouts are necessary for large xml trees. This will cancel the call if the request is taking\n   * too long, but will still allow the promises to resolve.\n   *\n   * @private\n   * @param {string} url - url to use as a hash in the timeoutTable\n   * @param {Promise} requester - the promise that creates the web request to the url\n   */\n  initializeTimeout(url, requester) {\n    // this will throw a CancelError which will be handled in the parent that calls this method.\n    this.timeoutTable[url] = setTimeout(() => requester.cancel(), this.timeout);\n  }\n\n  /**\n   * Recursive function that will go through a sitemaps tree and get all the sites\n   *\n   * @private\n   * @recursive\n   * @param {string} url - the Sitemaps url (e.g https://wp.seantburke.com/sitemap.xml)\n   * @param {integer} retryIndex - Number of retry attempts fro this URL (e.g. 0 for 1st attempt, 1 for second attempty etc.)\n   * @returns {Promise<SitesData>}\n   */\n  async crawl(url, retryIndex = 0) {\n    try {\n      const { error, data } = await this.parse(url);\n      // The promise resolved, remove the timeout\n      clearTimeout(this.timeoutTable[url]);\n\n      if (error) {\n        // Handle errors during sitemap parsing / request\n        // Retry on error until you reach the retry limit set in the settings\n        if (retryIndex < this.retries) {\n          if (this.debug) {\n            console.log(\n              `(Retry attempt: ${retryIndex + 1} / ${\n                this.retries\n              }) ${url} due to ${data.name} on previous request`\n            );\n          }\n          return this.crawl(url, retryIndex + 1);\n        }\n\n        if (this.debug) {\n          console.error(\n            `Error occurred during \"crawl('${url}')\":\\n\\r Error: ${error}`\n          );\n        }\n\n        // Fail and log error\n        return {\n          sites: [],\n          errors: [\n            {\n              type: data.name,\n              message: error,\n              url,\n              retries: retryIndex,\n            },\n          ],\n        };\n      } else if (data && data.urlset && data.urlset.url) {\n        // Handle URLs found inside the sitemap\n        if (this.debug) {\n          console.debug(`Urlset found during \"crawl('${url}')\"`);\n        }\n        // filter out any urls that are older than the lastmod\n        const sites = data.urlset.url\n          .filter((site) => {\n            if (this.lastmod === 0) return true;\n            if (site.lastmod === undefined) return false;\n            const modified = new Date(site.lastmod[0]).getTime();\n\n            return modified >= this.lastmod;\n          })\n          .map((site) => site.loc && site.loc[0]);\n        return {\n          sites,\n          errors: [],\n        };\n      } else if (data && data.sitemapindex) {\n        // Handle child sitemaps found inside the active sitemap\n        if (this.debug) {\n          console.debug(`Additional sitemap found during \"crawl('${url}')\"`);\n        }\n        // Map each child url into a promise to create an array of promises\n        const sitemap = data.sitemapindex.sitemap.map(\n          (map) => map.loc && map.loc[0]\n        );\n\n        // Parse all child urls within the concurrency limit in the settings\n        const limit = pLimit(this.concurrency);\n        const promiseArray = sitemap.map((site) =>\n          limit(() => this.crawl(site))\n        );\n\n        // Make sure all the promises resolve then filter and reduce the array\n        const results = await Promise.all(promiseArray);\n        const sites = results\n          .filter((result) => result.errors.length === 0)\n          .reduce((prev, { sites }) => [...prev, ...sites], []);\n        const errors = results\n          .filter((result) => result.errors.length !== 0)\n          .reduce((prev, { errors }) => [...prev, ...errors], []);\n\n        return {\n          sites,\n          errors,\n        };\n      }\n\n      // Retry on error until you reach the retry limit set in the settings\n      if (retryIndex < this.retries) {\n        if (this.debug) {\n          console.log(\n            `(Retry attempt: ${retryIndex + 1} / ${\n              this.retries\n            }) ${url} due to ${data.name} on previous request`\n          );\n        }\n        return this.crawl(url, retryIndex + 1);\n      }\n      if (this.debug) {\n        console.error(`Unknown state during \"crawl('${url})'\":`, error, data);\n      }\n\n      // Fail and log error\n      return {\n        sites: [],\n        errors: [\n          {\n            url,\n            type: data.name || \"UnknownStateError\",\n            message: \"An unknown error occurred.\",\n            retries: retryIndex,\n          },\n        ],\n      };\n    } catch (e) {\n      if (this.debug) {\n        this.debug && console.error(e);\n      }\n    }\n  }\n\n  /**\n   * Gets the sites from a sitemap.xml with a given URL\n   *\n   * @deprecated\n   * @param {string} url - url to query\n   * @param {getSitesCallback} callback - callback for sites and error\n   * @callback\n   */\n  async getSites(url = this.url, callback) {\n    console.warn(\n      // eslint-disable-line no-console\n      \"\\r\\nWarning:\",\n      \"function .getSites() is deprecated, please use the function .fetch()\\r\\n\"\n    );\n\n    let err = {};\n    let sites = [];\n    try {\n      const response = await this.fetch(url);\n      sites = response.sites;\n    } catch (error) {\n      err = error;\n    }\n    return callback(err, sites);\n  }\n\n  /**\n   * Decompress the gzipped response body using zlib.gunzip\n   *\n   * @param {Buffer} body - body of the gzipped file\n   * @returns {Boolean}\n   */\n  decompressResponseBody(body) {\n    return new Promise((resolve, reject) => {\n      const buffer = Buffer.from(body);\n      zlib.gunzip(buffer, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n}\n\n/**\n * Callback for the getSites method\n *\n * @callback getSitesCallback\n * @param {Object} error - error from callback\n * @param {Array} sites - an Array of sitemaps\n */\n\n/**\n * Timeout in milliseconds\n *\n * @typedef {Number} Timeout\n * the number of milliseconds before all requests timeout. The promises will still resolve so\n * you'll still receive parts of the request, but maybe not all urls\n * default is 15000 which is 15 seconds\n */\n\n/**\n * Resolve handler type for the promise in this.parse()\n *\n * @typedef {Object} ParseData\n *\n * @property {Error} error that either comes from `parseStringPromise` or `got` or custom error\n * @property {Object} data\n * @property {string} data.url - URL of sitemap\n * @property {Array} data.urlset - Array of returned URLs\n * @property {string} data.urlset.url - single Url\n * @property {Object} data.sitemapindex - index of sitemap\n * @property {string} data.sitemapindex.sitemap - Sitemap\n * @example {\n *   error: 'There was an error!'\n *   data: {\n *     url: 'https://linkedin.com',\n *     urlset: [{\n *       url: 'https://www.linkedin.com/project1'\n *     },[{\n *       url: 'https://www.linkedin.com/project2'\n *     }]\n *   }\n * }\n */\n\n/**\n * Resolve handler type for the promise in this.parse()\n *\n * @typedef {Object} SitesData\n *\n * @property {string} url - the original url used to query the data\n * @property {SitesArray} sites\n * @property {ErrorDataArray} errors\n * @example {\n *   url: 'https://linkedin.com/sitemap.xml',\n *   sites: [\n *     'https://linkedin.com/project1',\n *     'https://linkedin.com/project2'\n *   ],\n *   errors: [\n *      {\n *        type: 'CancelError',\n *        url: 'https://www.walmart.com/sitemap_tp1.xml',\n *        retries: 0\n *      },\n *      {\n *        type: 'HTTPError',\n *        url: 'https://www.walmart.com/sitemap_tp2.xml',\n *        retries: 0\n *      },\n *   ]\n * }\n */\n\n/**\n * An array of urls\n *\n * @typedef {String[]} SitesArray\n * @example [\n *   'https://www.google.com',\n *   'https://www.linkedin.com'\n * ]\n */\n\n/**\n * An array of Error data objects\n *\n * @typedef {ErrorData[]} ErrorDataArray\n * @example [\n *    {\n *      type: 'CancelError',\n *      url: 'https://www.walmart.com/sitemap_tp1.xml',\n *      retries: 0\n *    },\n *    {\n *      type: 'HTTPError',\n *      url: 'https://www.walmart.com/sitemap_tp2.xml',\n *      retries: 0\n *    },\n * ]\n */\n\n/**\n * An object containing details about the errors which occurred during the crawl\n *\n * @typedef {Object} ErrorData\n *\n * @property {string} type - The error type which was returned\n * @property {string} url - The sitemap URL which returned the error\n * @property {Number} errors - The total number of retries attempted after receiving the first error\n * @example {\n *    type: 'CancelError',\n *    url: 'https://www.walmart.com/sitemap_tp1.xml',\n *    retries: 0\n * }\n */\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cbee2b0b7d4a5b0db7058c6cd55a07f957737959","contentHash":"eed320428732d35a0908896c972e2cd44caa777dfbca4a774cb44b388957e649"},"/Users/sean/Code/sitemapper/lib/tests/test.js":{"path":"/Users/sean/Code/sitemapper/lib/tests/test.js","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":66}},"1":{"start":{"line":1,"column":77},"end":{"line":1,"column":118}},"2":{"start":{"line":1,"column":131},"end":{"line":1,"column":196}},"3":{"start":{"line":1,"column":232},"end":{"line":1,"column":268}},"4":{"start":{"line":1,"column":284},"end":{"line":1,"column":5436}},"5":{"start":{"line":1,"column":317},"end":{"line":1,"column":5433}},"6":{"start":{"line":1,"column":333},"end":{"line":1,"column":367}},"7":{"start":{"line":1,"column":409},"end":{"line":1,"column":1162}},"8":{"start":{"line":1,"column":456},"end":{"line":1,"column":503}},"9":{"start":{"line":1,"column":541},"end":{"line":1,"column":576}},"10":{"start":{"line":1,"column":614},"end":{"line":1,"column":649}},"11":{"start":{"line":1,"column":687},"end":{"line":1,"column":722}},"12":{"start":{"line":1,"column":763},"end":{"line":1,"column":859}},"13":{"start":{"line":1,"column":904},"end":{"line":1,"column":990}},"14":{"start":{"line":1,"column":1022},"end":{"line":1,"column":1081}},"15":{"start":{"line":1,"column":1109},"end":{"line":1,"column":1160}},"16":{"start":{"line":1,"column":1224},"end":{"line":1,"column":3762}},"17":{"start":{"line":1,"column":1307},"end":{"line":1,"column":1325}},"18":{"start":{"line":1,"column":1325},"end":{"line":1,"column":1607}},"19":{"start":{"line":1,"column":1392},"end":{"line":1,"column":1559}},"20":{"start":{"line":1,"column":1572},"end":{"line":1,"column":1605}},"21":{"start":{"line":1,"column":1688},"end":{"line":1,"column":1706}},"22":{"start":{"line":1,"column":1706},"end":{"line":1,"column":1979}},"23":{"start":{"line":1,"column":1782},"end":{"line":1,"column":1931}},"24":{"start":{"line":1,"column":1944},"end":{"line":1,"column":1977}},"25":{"start":{"line":1,"column":2067},"end":{"line":1,"column":2085}},"26":{"start":{"line":1,"column":2085},"end":{"line":1,"column":2371}},"27":{"start":{"line":1,"column":2154},"end":{"line":1,"column":2323}},"28":{"start":{"line":1,"column":2336},"end":{"line":1,"column":2369}},"29":{"start":{"line":1,"column":2454},"end":{"line":1,"column":2472}},"30":{"start":{"line":1,"column":2472},"end":{"line":1,"column":2771}},"31":{"start":{"line":1,"column":2559},"end":{"line":1,"column":2723}},"32":{"start":{"line":1,"column":2736},"end":{"line":1,"column":2769}},"33":{"start":{"line":1,"column":2880},"end":{"line":1,"column":2898}},"34":{"start":{"line":1,"column":2898},"end":{"line":1,"column":3098}},"35":{"start":{"line":1,"column":2983},"end":{"line":1,"column":3050}},"36":{"start":{"line":1,"column":3063},"end":{"line":1,"column":3096}},"37":{"start":{"line":1,"column":3213},"end":{"line":1,"column":3231}},"38":{"start":{"line":1,"column":3231},"end":{"line":1,"column":3424}},"39":{"start":{"line":1,"column":3324},"end":{"line":1,"column":3376}},"40":{"start":{"line":1,"column":3389},"end":{"line":1,"column":3422}},"41":{"start":{"line":1,"column":3526},"end":{"line":1,"column":3544}},"42":{"start":{"line":1,"column":3544},"end":{"line":1,"column":3760}},"43":{"start":{"line":1,"column":3645},"end":{"line":1,"column":3712}},"44":{"start":{"line":1,"column":3725},"end":{"line":1,"column":3758}},"45":{"start":{"line":1,"column":3804},"end":{"line":1,"column":5182}},"46":{"start":{"line":1,"column":3820},"end":{"line":1,"column":3912}},"47":{"start":{"line":1,"column":4014},"end":{"line":1,"column":4032}},"48":{"start":{"line":1,"column":4032},"end":{"line":1,"column":4273}},"49":{"start":{"line":1,"column":4133},"end":{"line":1,"column":4225}},"50":{"start":{"line":1,"column":4238},"end":{"line":1,"column":4271}},"51":{"start":{"line":1,"column":4351},"end":{"line":1,"column":4369}},"52":{"start":{"line":1,"column":4369},"end":{"line":1,"column":4715}},"53":{"start":{"line":1,"column":4482},"end":{"line":1,"column":4667}},"54":{"start":{"line":1,"column":4680},"end":{"line":1,"column":4713}},"55":{"start":{"line":1,"column":4797},"end":{"line":1,"column":4815}},"56":{"start":{"line":1,"column":4815},"end":{"line":1,"column":5180}},"57":{"start":{"line":1,"column":4928},"end":{"line":1,"column":5132}},"58":{"start":{"line":1,"column":5145},"end":{"line":1,"column":5178}},"59":{"start":{"line":1,"column":5223},"end":{"line":1,"column":5431}},"60":{"start":{"line":1,"column":5280},"end":{"line":1,"column":5298}},"61":{"start":{"line":1,"column":5298},"end":{"line":1,"column":5429}},"62":{"start":{"line":1,"column":5366},"end":{"line":1,"column":5427}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":1,"column":206},"end":{"line":1,"column":228}},"loc":{"start":{"line":1,"column":231},"end":{"line":1,"column":269}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":306},"end":{"line":1,"column":307}},"loc":{"start":{"line":1,"column":316},"end":{"line":1,"column":5434}},"line":1},"2":{"name":"(anonymous_2)","decl":{"start":{"line":1,"column":328},"end":{"line":1,"column":329}},"loc":{"start":{"line":1,"column":332},"end":{"line":1,"column":368}},"line":1},"3":{"name":"(anonymous_3)","decl":{"start":{"line":1,"column":398},"end":{"line":1,"column":399}},"loc":{"start":{"line":1,"column":408},"end":{"line":1,"column":1163}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":451},"end":{"line":1,"column":452}},"loc":{"start":{"line":1,"column":455},"end":{"line":1,"column":504}},"line":1},"5":{"name":"(anonymous_5)","decl":{"start":{"line":1,"column":536},"end":{"line":1,"column":537}},"loc":{"start":{"line":1,"column":540},"end":{"line":1,"column":577}},"line":1},"6":{"name":"(anonymous_6)","decl":{"start":{"line":1,"column":609},"end":{"line":1,"column":610}},"loc":{"start":{"line":1,"column":613},"end":{"line":1,"column":650}},"line":1},"7":{"name":"(anonymous_7)","decl":{"start":{"line":1,"column":682},"end":{"line":1,"column":683}},"loc":{"start":{"line":1,"column":686},"end":{"line":1,"column":723}},"line":1},"8":{"name":"(anonymous_8)","decl":{"start":{"line":1,"column":758},"end":{"line":1,"column":759}},"loc":{"start":{"line":1,"column":762},"end":{"line":1,"column":860}},"line":1},"9":{"name":"(anonymous_9)","decl":{"start":{"line":1,"column":899},"end":{"line":1,"column":900}},"loc":{"start":{"line":1,"column":903},"end":{"line":1,"column":991}},"line":1},"10":{"name":"(anonymous_10)","decl":{"start":{"line":1,"column":1017},"end":{"line":1,"column":1018}},"loc":{"start":{"line":1,"column":1021},"end":{"line":1,"column":1082}},"line":1},"11":{"name":"(anonymous_11)","decl":{"start":{"line":1,"column":1104},"end":{"line":1,"column":1105}},"loc":{"start":{"line":1,"column":1108},"end":{"line":1,"column":1161}},"line":1},"12":{"name":"(anonymous_12)","decl":{"start":{"line":1,"column":1213},"end":{"line":1,"column":1214}},"loc":{"start":{"line":1,"column":1223},"end":{"line":1,"column":3763}},"line":1},"13":{"name":"(anonymous_13)","decl":{"start":{"line":1,"column":1295},"end":{"line":1,"column":1296}},"loc":{"start":{"line":1,"column":1306},"end":{"line":1,"column":1608}},"line":1},"14":{"name":"(anonymous_14)","decl":{"start":{"line":1,"column":1388},"end":{"line":1,"column":1389}},"loc":{"start":{"line":1,"column":1391},"end":{"line":1,"column":1560}},"line":1},"15":{"name":"(anonymous_15)","decl":{"start":{"line":1,"column":1568},"end":{"line":1,"column":1569}},"loc":{"start":{"line":1,"column":1571},"end":{"line":1,"column":1606}},"line":1},"16":{"name":"(anonymous_16)","decl":{"start":{"line":1,"column":1676},"end":{"line":1,"column":1677}},"loc":{"start":{"line":1,"column":1687},"end":{"line":1,"column":1980}},"line":1},"17":{"name":"(anonymous_17)","decl":{"start":{"line":1,"column":1778},"end":{"line":1,"column":1779}},"loc":{"start":{"line":1,"column":1781},"end":{"line":1,"column":1932}},"line":1},"18":{"name":"(anonymous_18)","decl":{"start":{"line":1,"column":1940},"end":{"line":1,"column":1941}},"loc":{"start":{"line":1,"column":1943},"end":{"line":1,"column":1978}},"line":1},"19":{"name":"(anonymous_19)","decl":{"start":{"line":1,"column":2055},"end":{"line":1,"column":2056}},"loc":{"start":{"line":1,"column":2066},"end":{"line":1,"column":2372}},"line":1},"20":{"name":"(anonymous_20)","decl":{"start":{"line":1,"column":2150},"end":{"line":1,"column":2151}},"loc":{"start":{"line":1,"column":2153},"end":{"line":1,"column":2324}},"line":1},"21":{"name":"(anonymous_21)","decl":{"start":{"line":1,"column":2332},"end":{"line":1,"column":2333}},"loc":{"start":{"line":1,"column":2335},"end":{"line":1,"column":2370}},"line":1},"22":{"name":"(anonymous_22)","decl":{"start":{"line":1,"column":2442},"end":{"line":1,"column":2443}},"loc":{"start":{"line":1,"column":2453},"end":{"line":1,"column":2772}},"line":1},"23":{"name":"(anonymous_23)","decl":{"start":{"line":1,"column":2555},"end":{"line":1,"column":2556}},"loc":{"start":{"line":1,"column":2558},"end":{"line":1,"column":2724}},"line":1},"24":{"name":"(anonymous_24)","decl":{"start":{"line":1,"column":2732},"end":{"line":1,"column":2733}},"loc":{"start":{"line":1,"column":2735},"end":{"line":1,"column":2770}},"line":1},"25":{"name":"(anonymous_25)","decl":{"start":{"line":1,"column":2868},"end":{"line":1,"column":2869}},"loc":{"start":{"line":1,"column":2879},"end":{"line":1,"column":3099}},"line":1},"26":{"name":"(anonymous_26)","decl":{"start":{"line":1,"column":2979},"end":{"line":1,"column":2980}},"loc":{"start":{"line":1,"column":2982},"end":{"line":1,"column":3051}},"line":1},"27":{"name":"(anonymous_27)","decl":{"start":{"line":1,"column":3059},"end":{"line":1,"column":3060}},"loc":{"start":{"line":1,"column":3062},"end":{"line":1,"column":3097}},"line":1},"28":{"name":"(anonymous_28)","decl":{"start":{"line":1,"column":3201},"end":{"line":1,"column":3202}},"loc":{"start":{"line":1,"column":3212},"end":{"line":1,"column":3425}},"line":1},"29":{"name":"(anonymous_29)","decl":{"start":{"line":1,"column":3320},"end":{"line":1,"column":3321}},"loc":{"start":{"line":1,"column":3323},"end":{"line":1,"column":3377}},"line":1},"30":{"name":"(anonymous_30)","decl":{"start":{"line":1,"column":3385},"end":{"line":1,"column":3386}},"loc":{"start":{"line":1,"column":3388},"end":{"line":1,"column":3423}},"line":1},"31":{"name":"(anonymous_31)","decl":{"start":{"line":1,"column":3514},"end":{"line":1,"column":3515}},"loc":{"start":{"line":1,"column":3525},"end":{"line":1,"column":3761}},"line":1},"32":{"name":"(anonymous_32)","decl":{"start":{"line":1,"column":3641},"end":{"line":1,"column":3642}},"loc":{"start":{"line":1,"column":3644},"end":{"line":1,"column":3713}},"line":1},"33":{"name":"(anonymous_33)","decl":{"start":{"line":1,"column":3721},"end":{"line":1,"column":3722}},"loc":{"start":{"line":1,"column":3724},"end":{"line":1,"column":3759}},"line":1},"34":{"name":"(anonymous_34)","decl":{"start":{"line":1,"column":3793},"end":{"line":1,"column":3794}},"loc":{"start":{"line":1,"column":3803},"end":{"line":1,"column":5183}},"line":1},"35":{"name":"(anonymous_35)","decl":{"start":{"line":1,"column":3815},"end":{"line":1,"column":3816}},"loc":{"start":{"line":1,"column":3819},"end":{"line":1,"column":3913}},"line":1},"36":{"name":"(anonymous_36)","decl":{"start":{"line":1,"column":4002},"end":{"line":1,"column":4003}},"loc":{"start":{"line":1,"column":4013},"end":{"line":1,"column":4274}},"line":1},"37":{"name":"(anonymous_37)","decl":{"start":{"line":1,"column":4129},"end":{"line":1,"column":4130}},"loc":{"start":{"line":1,"column":4132},"end":{"line":1,"column":4226}},"line":1},"38":{"name":"(anonymous_38)","decl":{"start":{"line":1,"column":4234},"end":{"line":1,"column":4235}},"loc":{"start":{"line":1,"column":4237},"end":{"line":1,"column":4272}},"line":1},"39":{"name":"(anonymous_39)","decl":{"start":{"line":1,"column":4339},"end":{"line":1,"column":4340}},"loc":{"start":{"line":1,"column":4350},"end":{"line":1,"column":4716}},"line":1},"40":{"name":"(anonymous_40)","decl":{"start":{"line":1,"column":4478},"end":{"line":1,"column":4479}},"loc":{"start":{"line":1,"column":4481},"end":{"line":1,"column":4668}},"line":1},"41":{"name":"(anonymous_41)","decl":{"start":{"line":1,"column":4676},"end":{"line":1,"column":4677}},"loc":{"start":{"line":1,"column":4679},"end":{"line":1,"column":4714}},"line":1},"42":{"name":"(anonymous_42)","decl":{"start":{"line":1,"column":4785},"end":{"line":1,"column":4786}},"loc":{"start":{"line":1,"column":4796},"end":{"line":1,"column":5181}},"line":1},"43":{"name":"(anonymous_43)","decl":{"start":{"line":1,"column":4924},"end":{"line":1,"column":4925}},"loc":{"start":{"line":1,"column":4927},"end":{"line":1,"column":5133}},"line":1},"44":{"name":"(anonymous_44)","decl":{"start":{"line":1,"column":5141},"end":{"line":1,"column":5142}},"loc":{"start":{"line":1,"column":5144},"end":{"line":1,"column":5179}},"line":1},"45":{"name":"(anonymous_45)","decl":{"start":{"line":1,"column":5212},"end":{"line":1,"column":5213}},"loc":{"start":{"line":1,"column":5222},"end":{"line":1,"column":5432}},"line":1},"46":{"name":"(anonymous_46)","decl":{"start":{"line":1,"column":5268},"end":{"line":1,"column":5269}},"loc":{"start":{"line":1,"column":5279},"end":{"line":1,"column":5430}},"line":1},"47":{"name":"(anonymous_47)","decl":{"start":{"line":1,"column":5358},"end":{"line":1,"column":5359}},"loc":{"start":{"line":1,"column":5365},"end":{"line":1,"column":5428}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":1,"column":239},"end":{"line":1,"column":268}},"type":"cond-expr","locations":[{"start":{"line":1,"column":255},"end":{"line":1,"column":256}},{"start":{"line":1,"column":257},"end":{"line":1,"column":268}}],"line":1},"1":{"loc":{"start":{"line":1,"column":239},"end":{"line":1,"column":254}},"type":"binary-expr","locations":[{"start":{"line":1,"column":239},"end":{"line":1,"column":240}},{"start":{"line":1,"column":242},"end":{"line":1,"column":254}}],"line":1}},"s":{"0":1,"1":1,"2":1,"3":2,"4":1,"5":1,"6":19,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":1,"22":1,"23":1,"24":0,"25":1,"26":1,"27":1,"28":0,"29":1,"30":1,"31":1,"32":0,"33":1,"34":1,"35":1,"36":0,"37":1,"38":1,"39":1,"40":0,"41":1,"42":1,"43":1,"44":0,"45":1,"46":3,"47":1,"48":1,"49":1,"50":0,"51":1,"52":1,"53":1,"54":0,"55":1,"56":1,"57":1,"58":0,"59":1,"60":1,"61":1,"62":1},"f":{"0":2,"1":1,"2":19,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":0,"22":1,"23":1,"24":0,"25":1,"26":1,"27":0,"28":1,"29":1,"30":0,"31":1,"32":1,"33":0,"34":1,"35":3,"36":1,"37":1,"38":0,"39":1,"40":1,"41":0,"42":1,"43":1,"44":0,"45":1,"46":1,"47":1},"b":{"0":[0,2],"1":[2,2]},"inputSourceMap":{"version":3,"file":"test.js","names":["sitemapper","describe","beforeEach","Sitemapper","it","initializeTimeout","should","be","Function","crawl","parse","fetch","url","equal","timeout","done","then","data","sites","Array","length","above","isUrl","true","catch","error","console","debug","errors","greaterThan","log","requestHeaders","rejectUnauthorized","containEql","type","message","retries","getSites","err"],"sources":["../../src/tests/test.js"],"sourcesContent":["import 'async';\nimport 'assert';\nimport 'should';\nimport isUrl from 'is-url';\n\nimport Sitemapper from '../../lib/assets/sitemapper.js';\n\nlet sitemapper;\n\ndescribe('Sitemapper', function () {\n\n  beforeEach(() => {\n    sitemapper = new Sitemapper();\n  });\n\n  describe('Sitemapper Class', function () {\n\n    it('should have initializeTimeout method', () => {\n      sitemapper.initializeTimeout.should.be.Function;\n    });\n\n    it('should have crawl method', () => {\n      sitemapper.crawl.should.be.Function;\n    });\n\n    it('should have parse method', () => {\n      sitemapper.parse.should.be.Function;\n    });\n\n    it('should have fetch method', () => {\n      sitemapper.fetch.should.be.Function;\n    });\n\n    it('should construct with a url', () => {\n      sitemapper = new Sitemapper({\n        url: 'google.com',\n      });\n      sitemapper.url.should.equal('google.com');\n    });\n\n    it('should construct with a timeout', () => {\n      sitemapper = new Sitemapper({\n        timeout: 1000,\n      });\n      sitemapper.timeout.should.equal(1000);\n    });\n\n    it('should set timeout', () => {\n      sitemapper.timeout = 1000;\n      sitemapper.timeout.should.equal(1000);\n    });\n\n    it('should set url', () => {\n      sitemapper.url = 1000;\n      sitemapper.url.should.equal(1000);\n    });\n  });\n\n  describe('fetch Method resolves sites to array', function () {\n    it('https://wp.seantburke.com/sitemap.xml sitemaps should be an array', function (done) {\n      this.timeout(30000);\n      const url = 'https://wp.seantburke.com/sitemap.xml';\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.url.should.equal(url);\n          data.sites.length.should.be.above(2);\n          isUrl(data.sites[0]).should.be.true;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('gibberish.gibberish should fail silently with an empty array', function (done) {\n      this.timeout(30000);\n      const url = 'http://gibberish.gibberish';\n      sitemapper.debug = true;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          data.errors.length.should.be.greaterThan(0);\n          data.errors.length.should.be.greaterThan(0);\n          console.log(data);\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.google.com/work/sitemap.xml sitemaps should be an array', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.google.com/work/sitemap.xml';\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.url.should.equal(url);\n          data.sites.length.should.be.above(2);\n          isUrl(data.sites[0]).should.be.true;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.golinks.io/sitemap.xml sitemaps should be an array', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.golinks.io/sitemap.xml';\n      sitemapper.timeout = 5000;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.url.should.equal(url);\n          data.sites.length.should.be.above(2);\n          isUrl(data.sites[0]).should.be.true;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.golinks.io/sitemap.xml sitemaps should return an empty array when timing out', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.golinks.io/sitemap.xml';\n      sitemapper.timeout = 1;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          console.log(data);\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.golinks.com/blog/sitemap.xml sitemaps should return an empty array when timing out', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.golinks.com/blog/sitemap.xml';\n      sitemapper.timeout = 10000;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://www.banggood.com/sitemap/category.xml.gz gzip should be a non-empty array', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.banggood.com/sitemap/category.xml.gz';\n      sitemapper.timeout = 10000;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.sites.length.should.be.greaterThan(0);\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n  });\n\n  describe('gzipped sitemaps', function () {\n    beforeEach(() => {\n      sitemapper = new Sitemapper({\n        requestHeaders: {\n          'Accept-Encoding': 'gzip,deflate,sdch',\n        }\n      });\n    });\n\n    it('https://www.banggood.com/sitemap/category.xml.gz gzip should be a non-empty array', function (done) {\n      this.timeout(30000);\n      const url = 'https://www.banggood.com/sitemap/category.xml.gz';\n      sitemapper.timeout = 10000;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          data.sites.length.should.be.greaterThan(0);\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://foo.com/sitemap.xml should allow insecure request', function (done) {\n      this.timeout(30000);\n      const url = 'https://foo.com/sitemap.xml';\n      sitemapper.timeout = 10000;\n      sitemapper.rejectUnauthorized = true;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          data.errors.should.containEql({\n            type: 'RequestError',\n            message: 'Error occurred: RequestError',\n            url: 'https://foo.com/sitemap.xml',\n            retries: 0\n          });\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n\n    it('https://foo.com/sitemap.xml should not allow insecure request', function (done) {\n      this.timeout(30000);\n      const url = 'https://foo.com/sitemap.xml';\n      sitemapper.timeout = 10000;\n      sitemapper.rejectUnauthorized = false;\n      sitemapper.fetch(url)\n        .then(data => {\n          data.sites.should.be.Array;\n          data.errors.should.be.Array;\n          data.errors.should.containEql({\n            type: 'HTTPError',\n            message: 'HTTP Error occurred: Response code 404 (Not Found)',\n            url: 'https://foo.com/sitemap.xml',\n            retries: 0\n          });\n          done();\n        })\n        .catch(error => {\n          console.error('Test failed');\n          done(error);\n        });\n    });\n  });\n\n  describe('getSites method', function () {\n    it('getSites should be backwards compatible', function (done) {\n      this.timeout(30000);\n      const url = 'https://wp.seantburke.com/sitemap.xml';\n      sitemapper.getSites(url, (err, sites) => {\n        sites.should.be.Array;\n        isUrl(sites[0]).should.be.true;\n        done();\n      });\n    });\n  });\n});\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb81aab3a3b5959a62c594cdfc0bed277f65b2fa","contentHash":"ff816c8541695d6e108c55bd0466ca64766c182c0c8129d8a4c5a4ec8f3ffd53"},"/Users/sean/Code/sitemapper/lib/tests/test.ts.js":{"path":"/Users/sean/Code/sitemapper/lib/tests/test.ts.js","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":17}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":18}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":18}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":31}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":65}},"6":{"start":{"line":10,"column":0},"end":{"line":163,"column":3}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":7}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":51}},"9":{"start":{"line":14,"column":4},"end":{"line":47,"column":7}},"10":{"start":{"line":15,"column":8},"end":{"line":17,"column":11}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":60}},"12":{"start":{"line":18,"column":8},"end":{"line":20,"column":11}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":48}},"14":{"start":{"line":21,"column":8},"end":{"line":23,"column":11}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":48}},"16":{"start":{"line":24,"column":8},"end":{"line":26,"column":11}},"17":{"start":{"line":25,"column":12},"end":{"line":25,"column":48}},"18":{"start":{"line":27,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":28,"column":12},"end":{"line":30,"column":15}},"20":{"start":{"line":31,"column":12},"end":{"line":31,"column":54}},"21":{"start":{"line":33,"column":8},"end":{"line":38,"column":11}},"22":{"start":{"line":34,"column":12},"end":{"line":36,"column":15}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":50}},"24":{"start":{"line":39,"column":8},"end":{"line":42,"column":11}},"25":{"start":{"line":40,"column":12},"end":{"line":40,"column":38}},"26":{"start":{"line":41,"column":12},"end":{"line":41,"column":50}},"27":{"start":{"line":43,"column":8},"end":{"line":46,"column":11}},"28":{"start":{"line":44,"column":12},"end":{"line":44,"column":34}},"29":{"start":{"line":45,"column":12},"end":{"line":45,"column":46}},"30":{"start":{"line":48,"column":4},"end":{"line":126,"column":7}},"31":{"start":{"line":49,"column":8},"end":{"line":64,"column":11}},"32":{"start":{"line":50,"column":12},"end":{"line":50,"column":32}},"33":{"start":{"line":51,"column":24},"end":{"line":51,"column":63}},"34":{"start":{"line":52,"column":12},"end":{"line":63,"column":15}},"35":{"start":{"line":54,"column":16},"end":{"line":54,"column":43}},"36":{"start":{"line":55,"column":16},"end":{"line":55,"column":43}},"37":{"start":{"line":56,"column":16},"end":{"line":56,"column":53}},"38":{"start":{"line":57,"column":16},"end":{"line":57,"column":52}},"39":{"start":{"line":58,"column":16},"end":{"line":58,"column":23}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":45}},"41":{"start":{"line":62,"column":16},"end":{"line":62,"column":28}},"42":{"start":{"line":65,"column":8},"end":{"line":78,"column":11}},"43":{"start":{"line":66,"column":12},"end":{"line":66,"column":32}},"44":{"start":{"line":67,"column":24},"end":{"line":67,"column":52}},"45":{"start":{"line":68,"column":12},"end":{"line":77,"column":15}},"46":{"start":{"line":70,"column":16},"end":{"line":70,"column":43}},"47":{"start":{"line":71,"column":16},"end":{"line":71,"column":44}},"48":{"start":{"line":72,"column":16},"end":{"line":72,"column":23}},"49":{"start":{"line":75,"column":16},"end":{"line":75,"column":45}},"50":{"start":{"line":76,"column":16},"end":{"line":76,"column":28}},"51":{"start":{"line":79,"column":8},"end":{"line":94,"column":11}},"52":{"start":{"line":80,"column":12},"end":{"line":80,"column":32}},"53":{"start":{"line":81,"column":24},"end":{"line":81,"column":65}},"54":{"start":{"line":82,"column":12},"end":{"line":93,"column":15}},"55":{"start":{"line":84,"column":16},"end":{"line":84,"column":43}},"56":{"start":{"line":85,"column":16},"end":{"line":85,"column":43}},"57":{"start":{"line":86,"column":16},"end":{"line":86,"column":53}},"58":{"start":{"line":87,"column":16},"end":{"line":87,"column":52}},"59":{"start":{"line":88,"column":16},"end":{"line":88,"column":23}},"60":{"start":{"line":91,"column":16},"end":{"line":91,"column":45}},"61":{"start":{"line":92,"column":16},"end":{"line":92,"column":28}},"62":{"start":{"line":95,"column":8},"end":{"line":111,"column":11}},"63":{"start":{"line":96,"column":12},"end":{"line":96,"column":32}},"64":{"start":{"line":97,"column":24},"end":{"line":97,"column":60}},"65":{"start":{"line":98,"column":12},"end":{"line":98,"column":38}},"66":{"start":{"line":99,"column":12},"end":{"line":110,"column":15}},"67":{"start":{"line":101,"column":16},"end":{"line":101,"column":43}},"68":{"start":{"line":102,"column":16},"end":{"line":102,"column":43}},"69":{"start":{"line":103,"column":16},"end":{"line":103,"column":53}},"70":{"start":{"line":104,"column":16},"end":{"line":104,"column":52}},"71":{"start":{"line":105,"column":16},"end":{"line":105,"column":23}},"72":{"start":{"line":108,"column":16},"end":{"line":108,"column":45}},"73":{"start":{"line":109,"column":16},"end":{"line":109,"column":28}},"74":{"start":{"line":112,"column":8},"end":{"line":125,"column":11}},"75":{"start":{"line":113,"column":12},"end":{"line":113,"column":32}},"76":{"start":{"line":114,"column":24},"end":{"line":114,"column":60}},"77":{"start":{"line":115,"column":12},"end":{"line":115,"column":35}},"78":{"start":{"line":116,"column":12},"end":{"line":124,"column":15}},"79":{"start":{"line":118,"column":16},"end":{"line":118,"column":43}},"80":{"start":{"line":119,"column":16},"end":{"line":119,"column":23}},"81":{"start":{"line":122,"column":16},"end":{"line":122,"column":45}},"82":{"start":{"line":123,"column":16},"end":{"line":123,"column":28}},"83":{"start":{"line":127,"column":4},"end":{"line":151,"column":7}},"84":{"start":{"line":128,"column":8},"end":{"line":134,"column":11}},"85":{"start":{"line":129,"column":12},"end":{"line":133,"column":15}},"86":{"start":{"line":135,"column":8},"end":{"line":150,"column":11}},"87":{"start":{"line":136,"column":12},"end":{"line":136,"column":32}},"88":{"start":{"line":137,"column":24},"end":{"line":137,"column":74}},"89":{"start":{"line":138,"column":12},"end":{"line":138,"column":39}},"90":{"start":{"line":139,"column":12},"end":{"line":149,"column":15}},"91":{"start":{"line":141,"column":16},"end":{"line":141,"column":43}},"92":{"start":{"line":142,"column":16},"end":{"line":142,"column":44}},"93":{"start":{"line":143,"column":16},"end":{"line":143,"column":59}},"94":{"start":{"line":144,"column":16},"end":{"line":144,"column":23}},"95":{"start":{"line":147,"column":16},"end":{"line":147,"column":45}},"96":{"start":{"line":148,"column":16},"end":{"line":148,"column":28}},"97":{"start":{"line":152,"column":4},"end":{"line":162,"column":7}},"98":{"start":{"line":153,"column":8},"end":{"line":161,"column":11}},"99":{"start":{"line":154,"column":12},"end":{"line":154,"column":32}},"100":{"start":{"line":155,"column":24},"end":{"line":155,"column":63}},"101":{"start":{"line":156,"column":12},"end":{"line":160,"column":15}},"102":{"start":{"line":157,"column":16},"end":{"line":157,"column":38}},"103":{"start":{"line":158,"column":16},"end":{"line":158,"column":47}},"104":{"start":{"line":159,"column":16},"end":{"line":159,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":23},"end":{"line":10,"column":24}},"loc":{"start":{"line":10,"column":35},"end":{"line":163,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":15},"end":{"line":11,"column":16}},"loc":{"start":{"line":11,"column":21},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":33},"end":{"line":14,"column":34}},"loc":{"start":{"line":14,"column":45},"end":{"line":47,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":51},"end":{"line":15,"column":52}},"loc":{"start":{"line":15,"column":57},"end":{"line":17,"column":9}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":39},"end":{"line":18,"column":40}},"loc":{"start":{"line":18,"column":45},"end":{"line":20,"column":9}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":39},"end":{"line":21,"column":40}},"loc":{"start":{"line":21,"column":45},"end":{"line":23,"column":9}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":39},"end":{"line":24,"column":40}},"loc":{"start":{"line":24,"column":45},"end":{"line":26,"column":9}},"line":24},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":42},"end":{"line":27,"column":43}},"loc":{"start":{"line":27,"column":48},"end":{"line":32,"column":9}},"line":27},"8":{"name":"(anonymous_8)","decl":{"start":{"line":33,"column":46},"end":{"line":33,"column":47}},"loc":{"start":{"line":33,"column":52},"end":{"line":38,"column":9}},"line":33},"9":{"name":"(anonymous_9)","decl":{"start":{"line":39,"column":33},"end":{"line":39,"column":34}},"loc":{"start":{"line":39,"column":39},"end":{"line":42,"column":9}},"line":39},"10":{"name":"(anonymous_10)","decl":{"start":{"line":43,"column":29},"end":{"line":43,"column":30}},"loc":{"start":{"line":43,"column":35},"end":{"line":46,"column":9}},"line":43},"11":{"name":"(anonymous_11)","decl":{"start":{"line":48,"column":53},"end":{"line":48,"column":54}},"loc":{"start":{"line":48,"column":65},"end":{"line":126,"column":5}},"line":48},"12":{"name":"(anonymous_12)","decl":{"start":{"line":49,"column":80},"end":{"line":49,"column":81}},"loc":{"start":{"line":49,"column":96},"end":{"line":64,"column":9}},"line":49},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":22},"end":{"line":53,"column":23}},"loc":{"start":{"line":53,"column":30},"end":{"line":59,"column":13}},"line":53},"14":{"name":"(anonymous_14)","decl":{"start":{"line":60,"column":23},"end":{"line":60,"column":24}},"loc":{"start":{"line":60,"column":32},"end":{"line":63,"column":13}},"line":60},"15":{"name":"(anonymous_15)","decl":{"start":{"line":65,"column":75},"end":{"line":65,"column":76}},"loc":{"start":{"line":65,"column":91},"end":{"line":78,"column":9}},"line":65},"16":{"name":"(anonymous_16)","decl":{"start":{"line":69,"column":22},"end":{"line":69,"column":23}},"loc":{"start":{"line":69,"column":30},"end":{"line":73,"column":13}},"line":69},"17":{"name":"(anonymous_17)","decl":{"start":{"line":74,"column":23},"end":{"line":74,"column":24}},"loc":{"start":{"line":74,"column":32},"end":{"line":77,"column":13}},"line":74},"18":{"name":"(anonymous_18)","decl":{"start":{"line":79,"column":82},"end":{"line":79,"column":83}},"loc":{"start":{"line":79,"column":98},"end":{"line":94,"column":9}},"line":79},"19":{"name":"(anonymous_19)","decl":{"start":{"line":83,"column":22},"end":{"line":83,"column":23}},"loc":{"start":{"line":83,"column":30},"end":{"line":89,"column":13}},"line":83},"20":{"name":"(anonymous_20)","decl":{"start":{"line":90,"column":23},"end":{"line":90,"column":24}},"loc":{"start":{"line":90,"column":32},"end":{"line":93,"column":13}},"line":90},"21":{"name":"(anonymous_21)","decl":{"start":{"line":95,"column":77},"end":{"line":95,"column":78}},"loc":{"start":{"line":95,"column":93},"end":{"line":111,"column":9}},"line":95},"22":{"name":"(anonymous_22)","decl":{"start":{"line":100,"column":22},"end":{"line":100,"column":23}},"loc":{"start":{"line":100,"column":30},"end":{"line":106,"column":13}},"line":100},"23":{"name":"(anonymous_23)","decl":{"start":{"line":107,"column":23},"end":{"line":107,"column":24}},"loc":{"start":{"line":107,"column":32},"end":{"line":110,"column":13}},"line":107},"24":{"name":"(anonymous_24)","decl":{"start":{"line":112,"column":103},"end":{"line":112,"column":104}},"loc":{"start":{"line":112,"column":119},"end":{"line":125,"column":9}},"line":112},"25":{"name":"(anonymous_25)","decl":{"start":{"line":117,"column":22},"end":{"line":117,"column":23}},"loc":{"start":{"line":117,"column":30},"end":{"line":120,"column":13}},"line":117},"26":{"name":"(anonymous_26)","decl":{"start":{"line":121,"column":23},"end":{"line":121,"column":24}},"loc":{"start":{"line":121,"column":32},"end":{"line":124,"column":13}},"line":121},"27":{"name":"(anonymous_27)","decl":{"start":{"line":127,"column":33},"end":{"line":127,"column":34}},"loc":{"start":{"line":127,"column":45},"end":{"line":151,"column":5}},"line":127},"28":{"name":"(anonymous_28)","decl":{"start":{"line":128,"column":19},"end":{"line":128,"column":20}},"loc":{"start":{"line":128,"column":25},"end":{"line":134,"column":9}},"line":128},"29":{"name":"(anonymous_29)","decl":{"start":{"line":135,"column":96},"end":{"line":135,"column":97}},"loc":{"start":{"line":135,"column":112},"end":{"line":150,"column":9}},"line":135},"30":{"name":"(anonymous_30)","decl":{"start":{"line":140,"column":22},"end":{"line":140,"column":23}},"loc":{"start":{"line":140,"column":30},"end":{"line":145,"column":13}},"line":140},"31":{"name":"(anonymous_31)","decl":{"start":{"line":146,"column":23},"end":{"line":146,"column":24}},"loc":{"start":{"line":146,"column":32},"end":{"line":149,"column":13}},"line":146},"32":{"name":"(anonymous_32)","decl":{"start":{"line":152,"column":32},"end":{"line":152,"column":33}},"loc":{"start":{"line":152,"column":44},"end":{"line":162,"column":5}},"line":152},"33":{"name":"(anonymous_33)","decl":{"start":{"line":153,"column":54},"end":{"line":153,"column":55}},"loc":{"start":{"line":153,"column":70},"end":{"line":161,"column":9}},"line":153},"34":{"name":"(anonymous_34)","decl":{"start":{"line":156,"column":37},"end":{"line":156,"column":38}},"loc":{"start":{"line":156,"column":53},"end":{"line":160,"column":13}},"line":156}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":15,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":0,"50":0,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":0,"61":0,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":0,"73":0,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":0,"82":0,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":0,"96":0,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1},"f":{"0":1,"1":15,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":0,"18":1,"19":1,"20":0,"21":1,"22":1,"23":0,"24":1,"25":1,"26":0,"27":1,"28":1,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7babc49329d9e114be03ad6650c8b73af52ea551","contentHash":"b4aac88a3fe05b9c3b7461a4d8686e023e54426f45b9f4151a3e49edf95182e2"}}